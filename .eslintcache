[{"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\User\\userAction.js":"1","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\App.js":"2","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\taskMan.js":"3","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\UserGroup\\userGroupAction.js":"4","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\signin.js":"5","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\auth\\authAction.js":"6","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\authRouter.js":"7","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\UserGroup\\userGroup.js":"8","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\SigninStyle.js":"9","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\OTP\\otp.js":"10","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\OTP\\OtpStyle.js":"11","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\page.js":"12","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\pageRouter.js":"13","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\dark-theme.js":"14","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Sidebar\\sidebar.js":"15","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Header\\headerStyle.js":"16","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Chat_Room\\chatRoom.js":"17","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Sidebar\\sidebarStyle.js":"18","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\Icons\\icons.js":"19","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\User\\userStyle.js":"20","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTmodel\\modal.js":"21","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\index.js":"22","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Header\\header.js":"23","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Newpassword\\newpass.js":"24","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\User\\user.js":"25","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Array\\array.js":"26","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Forgetpassword\\forgetpwStyle.js":"27","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Blog\\blogStyle.js":"28","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTForm\\MTbutton\\button.js":"29","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Forgetpassword\\forgetpass.js":"30","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\taskManStyle.js":"31","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\UserGroup\\userGroStyle.js":"32","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\light-theme.js":"33","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Chat_Room\\chatRoomStyle.js":"34","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTForm\\index.js":"35","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\PageStyle.js":"36","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\index.js":"37","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\store.js":"38","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\auth\\authReducer.js":"39","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\UserGroup\\userGroupReducer.js":"40","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\reportWebVitals.js":"41","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Blog\\postsReducer.js":"42","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\User\\userReducer.js":"43","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Blog\\postAction.js":"44","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Task-Management\\taskAction.js":"45","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\global.js":"46","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Blog\\blog.js":"47","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Task-Management\\taskReducer.js":"48","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Newpassword\\newpwStyle.js":"49","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\CardContent.js":"50"},{"size":4763,"mtime":1612597118465,"results":"51","hashOfConfig":"52"},{"size":989,"mtime":1612610616905,"results":"53","hashOfConfig":"52"},{"size":8769,"mtime":1612513530494,"results":"54","hashOfConfig":"52"},{"size":5714,"mtime":1612595299751,"results":"55","hashOfConfig":"52"},{"size":3885,"mtime":1612610521825,"results":"56","hashOfConfig":"52"},{"size":4648,"mtime":1612609385509,"results":"57","hashOfConfig":"52"},{"size":702,"mtime":1611228827388,"results":"58","hashOfConfig":"52"},{"size":8208,"mtime":1612596194659,"results":"59","hashOfConfig":"52"},{"size":3400,"mtime":1611223579055,"results":"60","hashOfConfig":"52"},{"size":2511,"mtime":1612176740467,"results":"61","hashOfConfig":"52"},{"size":1929,"mtime":1612176676209,"results":"62","hashOfConfig":"52"},{"size":1302,"mtime":1612610600423,"results":"63","hashOfConfig":"52"},{"size":1008,"mtime":1612347938257,"results":"64","hashOfConfig":"52"},{"size":577,"mtime":1610951988651,"results":"65","hashOfConfig":"52"},{"size":1209,"mtime":1612181775547,"results":"66","hashOfConfig":"52"},{"size":456,"mtime":1611978926848,"results":"67","hashOfConfig":"52"},{"size":625,"mtime":1609397505791,"results":"68","hashOfConfig":"52"},{"size":1056,"mtime":1611558109963,"results":"69","hashOfConfig":"52"},{"size":30979,"mtime":1612583930757,"results":"70","hashOfConfig":"52"},{"size":2102,"mtime":1611555011690,"results":"71","hashOfConfig":"52"},{"size":446,"mtime":1609827035278,"results":"72","hashOfConfig":"52"},{"size":134,"mtime":1609303744560,"results":"73","hashOfConfig":"52"},{"size":3134,"mtime":1612610568509,"results":"74","hashOfConfig":"52"},{"size":4949,"mtime":1612437870924,"results":"75","hashOfConfig":"52"},{"size":17128,"mtime":1612607833049,"results":"76","hashOfConfig":"52"},{"size":2057,"mtime":1610353106642,"results":"77","hashOfConfig":"52"},{"size":1846,"mtime":1612176196711,"results":"78","hashOfConfig":"52"},{"size":4058,"mtime":1612432737429,"results":"79","hashOfConfig":"52"},{"size":300,"mtime":1609827218437,"results":"80","hashOfConfig":"52"},{"size":2436,"mtime":1612175884241,"results":"81","hashOfConfig":"52"},{"size":8442,"mtime":1612505558562,"results":"82","hashOfConfig":"52"},{"size":2108,"mtime":1611558993162,"results":"83","hashOfConfig":"52"},{"size":175,"mtime":1609407541194,"results":"84","hashOfConfig":"52"},{"size":835,"mtime":1609410117084,"results":"85","hashOfConfig":"52"},{"size":74,"mtime":1609749031591,"results":"86","hashOfConfig":"52"},{"size":806,"mtime":1611991483605,"results":"87","hashOfConfig":"52"},{"size":392,"mtime":1610348748661,"results":"88","hashOfConfig":"52"},{"size":756,"mtime":1612418991306,"results":"89","hashOfConfig":"52"},{"size":843,"mtime":1612607911299,"results":"90","hashOfConfig":"52"},{"size":1770,"mtime":1612592596171,"results":"91","hashOfConfig":"52"},{"size":362,"mtime":1608102818989,"results":"92","hashOfConfig":"52"},{"size":654,"mtime":1612587446822,"results":"93","hashOfConfig":"52"},{"size":1399,"mtime":1612597132299,"results":"94","hashOfConfig":"52"},{"size":3307,"mtime":1612587465252,"results":"95","hashOfConfig":"52"},{"size":317,"mtime":1611994006101,"results":"96","hashOfConfig":"52"},{"size":16511,"mtime":1612616017265,"results":"97","hashOfConfig":"52"},{"size":14068,"mtime":1612593591761,"results":"98","hashOfConfig":"52"},{"size":275,"mtime":1611994381259,"results":"99","hashOfConfig":"52"},{"size":2208,"mtime":1610348232472,"results":"100","hashOfConfig":"52"},{"size":12824,"mtime":1612614333625,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bjm6b4",{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"134"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"184"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\User\\userAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\App.js",["215"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\taskMan.js",[],["216","217"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\UserGroup\\userGroupAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\signin.js",["218","219"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\auth\\authAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\authRouter.js",[],["220","221"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\UserGroup\\userGroup.js",[],["222","223"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\SigninStyle.js",[],["224","225"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\OTP\\otp.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\OTP\\OtpStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\page.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\pageRouter.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\dark-theme.js",[],["226","227"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Sidebar\\sidebar.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Header\\headerStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Chat_Room\\chatRoom.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Sidebar\\sidebarStyle.js",[],["228","229"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\Icons\\icons.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\User\\userStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTmodel\\modal.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\index.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Header\\header.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Newpassword\\newpass.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\User\\user.js",["230"],"import React, { useEffect, useState } from 'react';\r\nimport { MTButton } from '../../component/MTForm';\r\nimport { UserStyle } from './userStyle'\r\nimport { Table, Tooltip } from 'antd';\r\nimport MTModal from '../../component/MTmodel/modal';\r\nimport { Button, Form, Input, Radio, } from 'antd';\r\nimport { Select } from 'antd';\r\nimport { UserData, Registration, DeleteUser, FindUser, Update } from '../../../../core/Redux/User/userAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Icons from '../../../modules/component/Icons/icons'\r\n\r\nexport const User = () => {\r\n    const [form] = Form.useForm();\r\n    const { Option } = Select;\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state)\r\n    const [newUser, setNewUser] = useState(false);\r\n    const [editUser, setEditUser] = useState(false);\r\n    const [contact, setContact] = useState();\r\n    const [delet, setDelete] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [index, setToken] = useState(\"\")\r\n    const [editToken, setEdittoken] = useState(\"\")\r\n    const [loading, setLoading] = useState(false);\r\n    const [select, selectIndex] = useState(\"\")\r\n    const validateMessages = {\r\n        required: 'Email is required!',\r\n        types: { email: 'Email is not a valid email!', },\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(UserData())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (user.table.status === true) {\r\n            setNewUser(false)\r\n            setLoading(false)\r\n            form.resetFields();\r\n        }\r\n        if (user.table.delStatus === true) { setLoading(false); setDelete(false) }\r\n        if (user.table.editStatus === true) { form.resetFields(); setLoading(false); setEditUser(false) }\r\n        if (user.table.findUser) {\r\n            setEdittoken(user.table.findUser.data[0].tokenuser)\r\n            form.setFieldsValue(user.table.findUser.data[0]);\r\n            if (user.table.findUser.status === true) { setContact(user.table.findUser.data[0].contact) }\r\n        }\r\n    }, [user.table.status, user.table.findUser, user.table.editStatus, user.table.table, form])\r\n    const columns = [\r\n        {\r\n            \"title\": \"User Name\",\r\n            render: listUsers => `${listUsers.firstName} ${listUsers.lastName}`,\r\n            \"key\": \"firstName\",\r\n            \"width\": '20%',\r\n            \"ellipsis\": true,\r\n            sorter: (a, b) => a.firstName.length - b.firstName.length,\r\n        },\r\n        {\r\n            \"title\": \"Email\",\r\n            \"dataIndex\": \"email\",\r\n            \"key\": \"email\",\r\n            \"width\": '20%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Contect\",\r\n            \"dataIndex\": \"contact\",\r\n            \"key\": \"contact\",\r\n            \"width\": '15%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Designation\",\r\n            \"dataIndex\": \"designation\",\r\n            \"key\": \"designation\",\r\n            \"width\": '15%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Created Time\",\r\n            \"dataIndex\": \"createdTime\",\r\n            \"key\": \"createdTime\",\r\n            \"width\": '20%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Action\",\r\n            \"dataIndex\": \"action\",\r\n            \"key\": \"action\",\r\n            \"ellipsis\": true,\r\n            render: (text, record, index) => (\r\n                <span>\r\n                    <Tooltip placement=\"bottom\" title=\"Edit\">\r\n                        <span onClick={() => selectRow(record.tokenuser, index)} style={{ cursor: \"pointer\" }}>\r\n                            <Icons type=\"post_edit\" />\r\n                        </span>\r\n                    </Tooltip>\r\n                    <Tooltip placement=\"bottom\" title=\"Delete\">\r\n                        <span onClick={() => deleteTableRow(record.tokenuser, record.firstName + \" \" + record.lastName)} style={{ cursor: \"pointer\" }}>\r\n                            <Icons type=\"post_delete\" />\r\n                        </span>\r\n                    </Tooltip>\r\n                </span>\r\n            ),\r\n        },\r\n    ];\r\n    const opt = ['A', 'A+', 'A-', 'B+', 'B-', 'O+', 'O-', 'AB+', 'AB-']\r\n    const restrict = (event) => {\r\n        const regex = new RegExp(\"^[a-zA-Z]+$\");\r\n        const key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\r\n        if (!regex.test(key)) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const CreateModal = () => {\r\n        document.body.classList.remove('ReactModal__Body--before-close')\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        form.resetFields();\r\n        setNewUser(true)\r\n    }\r\n    const selectRow = (record, token) => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        dispatch(FindUser(record))\r\n        selectIndex(token);\r\n        if (user.table.findStatus) { setEditUser(true); }\r\n    }\r\n    const deleteTableRow = (record, title) => {\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        setDelete(true);\r\n        setTitle(title);\r\n        setToken(record);\r\n    }\r\n    const userActions = (value) => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        if (editUser) {\r\n            dispatch(Update(value, editToken, select))\r\n            setContact(value.contact)\r\n        } else if (newUser) {\r\n            dispatch(Registration(value))\r\n        } else {\r\n            dispatch(DeleteUser(index))\r\n        }\r\n        setLoading(true);\r\n    }\r\n    const onCancel = () => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        form.resetFields();\r\n        setNewUser(false);\r\n        setDelete(false);\r\n        setLoading(false);\r\n        setEditUser(false)\r\n    }\r\n    const contectValid = (event) => {\r\n        if (event.charCode === 46) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    const checkMobileNo = () => {\r\n        if (contact === \"\") { return Promise.reject('Contect is required'); }\r\n        if (contact < 9999999999) { return Promise.resolve(); }\r\n        return Promise.reject('Please input valid phone no!');\r\n    };\r\n\r\n    return (\r\n        <UserStyle>\r\n            <div className=\"heading\">\r\n                <div className=\"title\">User</div>\r\n                <div><MTButton className=\"createEle\" onClick={CreateModal}>Create</MTButton></div>\r\n            </div>\r\n            <MTModal\r\n                visible={delet ? delet : editUser ? editUser : newUser}\r\n                title={delet ? 'Delete User' : newUser ? 'New User' : 'Edit User'}\r\n                onOk={form.submit}\r\n                onCancel={onCancel}\r\n                closable={delet ? false : true}\r\n                maskClosable={false}\r\n                footer={delet ? [\r\n                    <Button key=\"submit\" loading={loading} className=\"deleteEle\" onClick={userActions}>Delete</Button>,\r\n                    <Button key=\"back\" className=\"cancelEle\" onClick={onCancel}>Cancel</Button>\r\n                ] : [<Button key=\"submit\" loading={loading} htmlType=\"submit\" form=\"userform\" className=\"deleteEle\">Save</Button>,]}\r\n            >\r\n                {delet ? <span>\r\n                    <p className=\"warning\">Are you sure to delete this User permenently?</p>\r\n                    <Icons type=\"usersMenu\" /> <span className=\"title\">{title}</span>\r\n                </span> :\r\n                    <Form layout=\"inline\" validateMessages={validateMessages} id=\"userform\" form={form} onFinish={userActions}>\r\n                        <div className=\"inputs-inline\">\r\n                            <div className=\"label\">First Name</div>\r\n                            <Form.Item name=\"firstName\" rules={[{ required: true, message: 'Please input First Name!' }]} >\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    onKeyPress={e => restrict(e)}\r\n                                    placeholder=\"Enter First Name\"\r\n                                />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"inputs-inline\">\r\n                            <div className=\"label\">Last Name</div>\r\n                            <Form.Item name=\"lastName\" rules={[{ required: true, message: 'Please input Last Name!' }]} >\r\n                                <Input\r\n                                    name=\"lastname\"\r\n                                    autoComplete=\"off\"\r\n                                    onKeyPress={e => restrict(e)}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Last Name\"\r\n                                />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"inputs\">\r\n                            <div className=\"label\">Email</div>\r\n                            <Form.Item name=\"email\" rules={[{ type: 'email', required: true }]}>\r\n                                <Input\r\n                                    name=\"email\"\r\n                                    autoComplete=\"off\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Email Address\"\r\n                                />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"inputs-inline\" style={{ padding: \"6px 10px 0px 13px\" }}>\r\n                            <div className=\"label\">Username</div>\r\n                            <Form.Item name=\"username\" rules={[{ required: true, message: 'Please input Username!' }]} >\r\n                                <Input\r\n                                    name=\"username\"\r\n                                    autoComplete=\"off\"\r\n                                    onKeyPress={e => restrict(e)}\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter User Name\"\r\n                                />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"inputs-inline\" style={{ padding: \"6px 10px 0px 13px\" }}>\r\n                            <div className=\"label\">Role</div>\r\n                            <Form.Item name=\"role\" rules={[{ required: true, message: 'Please Select Role!' }]} >\r\n                                <Select placeholder=\"Select Role\">\r\n                                    <Option value=\"ROLE_ADMIN\">Admin</Option>\r\n                                    <Option value=\"ROLE_USER\">User</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"inputs-inline\">\r\n                            <div className=\"label\">Contact No.</div>\r\n                            <Form.Item name=\"contact\" rules={[{ validator: checkMobileNo, required: true }]}>\r\n                                <Input\r\n                                    type=\"number\"\r\n                                    autoComplete=\"off\"\r\n                                    onKeyPress={e => contectValid(e)}\r\n                                    placeholder=\"Enter Contact No\"\r\n                                    onChange={e => setContact(e.target.value)}\r\n                                />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"inputs-inline\">\r\n                            <div className=\"label\">Designation</div>\r\n                            <Form.Item name=\"designation\" rules={[{ required: true, message: 'Please Select Designation!' }]} >\r\n                                <Select placeholder=\"Select designation\">\r\n                                    <Option value=\"Graphic Designer\">Graphic Designer</Option>\r\n                                    <Option value=\"Web Devloper\">Web Devloper</Option>\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"inputs-inline\">\r\n                            <div className=\"label\">Blood Group</div>\r\n                            <Form.Item name=\"bloodGroup\" rules={[{ required: true, message: 'Please Select bloodGroup!' }]}>\r\n                                <Select placeholder=\"Select bloodgroup\">\r\n                                    {opt.map((menu, index) => (\r\n                                        <Option key={index} value={menu}>{menu}</Option>\r\n                                    ))}\r\n                                </Select>\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"inputs-inline\" style={{ padding: \"6px 10px 0px 13px\" }}>\r\n                            <div className=\"label\">Gender</div>\r\n                            <Form.Item name=\"gender\" rules={[{ required: true, message: 'Please Select Gender!' }]} >\r\n                                <Radio.Group>\r\n                                    <Radio value=\"Male\" style={{ padding: \"5px\" }}>Male</Radio>\r\n                                    <Radio value=\"female\" style={{ padding: \"5px\" }}>female</Radio>\r\n                                </Radio.Group>\r\n                            </Form.Item>\r\n                        </div>\r\n\r\n                        <div className=\"inputs\" style={{ padding: \"6px 0px 0px 9px\" }}>\r\n                            <div className=\"label\">Address<sup>*</sup></div>\r\n                            <Form.Item name=\"address\" rules={[{ required: true, message: 'Please input your Address!' }]}                        >\r\n                                <Input placeholder=\"Enter address\" autoComplete=\"off\" onKeyPress={e => restrict(e)} />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"inputs-inline\">\r\n                            <div className=\"label\">Password<sup>*</sup></div>\r\n                            <Form.Item\r\n                                name=\"password\"\r\n                                hasFeedback\r\n                                rules={[{\r\n                                    required: true,\r\n                                    message: 'Please input your password!'\r\n                                }]}\r\n                            >\r\n                                <Input.Password\r\n                                    className=\"username\"\r\n                                    autoComplete=\"off\"\r\n                                    placeholder=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"newpassword\"\r\n                                />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"inputs-inline\">\r\n                            <div className=\"label\">Confirm Password<sup>*</sup></div>\r\n                            <Form.Item\r\n                                name=\"confirmPassword\"\r\n                                dependencies={['password']}\r\n                                hasFeedback\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: 'Please confirm your password!',\r\n                                    },\r\n                                    ({ getFieldValue }) => ({\r\n                                        validator(_, value) {\r\n                                            if (!value || getFieldValue('password') === value) {\r\n                                                return Promise.resolve();\r\n                                            }\r\n                                            return Promise.reject('The passwords are not match!');\r\n                                        },\r\n                                    }),\r\n                                ]}\r\n                            >\r\n                                <Input.Password\r\n                                    placeholder=\"confirm password\"\r\n                                    className=\"username\"\r\n                                    autoComplete=\"off\"\r\n                                    type=\"password\"\r\n                                    name=\"confirmpassword\"\r\n                                />\r\n                            </Form.Item>\r\n                        </div>\r\n                    </Form>\r\n                }\r\n            </MTModal>\r\n            <div className=\"tableContent\">\r\n                <Table\r\n                    sticky\r\n                    pagination={{ position: ['bottomRight'] }}\r\n                    columns={columns}\r\n                    dataSource={user.table.table}\r\n                    scroll={{ y: 'calc(77.5vh - 4em)' }}\r\n                />\r\n            </div>\r\n        </UserStyle >\r\n    );\r\n}\r\n\r\nexport default User;","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Array\\array.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Forgetpassword\\forgetpwStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Blog\\blogStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTForm\\MTbutton\\button.js",[],["231","232"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Forgetpassword\\forgetpass.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\taskManStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\UserGroup\\userGroStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\light-theme.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Chat_Room\\chatRoomStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTForm\\index.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\PageStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\index.js",[],["233","234"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\store.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\auth\\authReducer.js",["235","236"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\UserGroup\\userGroupReducer.js",["237","238"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\reportWebVitals.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Blog\\postsReducer.js",["239","240"],"const initState = {\r\n    blogs: [],\r\n};\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_CARD_DATA':\r\n            return (\r\n                state = {\r\n                    blogs: action.payload.data,\r\n                }\r\n            )\r\n        case 'DELETE_POST_DATA':\r\n            return (\r\n                state = {\r\n                    blogs: action.payload,\r\n                }\r\n            )\r\n        case 'CREATE_NEW_BLOG':\r\n            state = {\r\n                blogs: [...state.blogs, action.payload.data],\r\n                status: action.payload.status,\r\n            }\r\n    }\r\n    return state;\r\n};  ","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\User\\userReducer.js",["241","242"],"const initState = {\r\n    table: [],\r\n};\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_USER_DATA':\r\n            return (\r\n                state = {\r\n                    ...state,\r\n                    table: action.payload.data,\r\n                }\r\n            )\r\n        case 'USER_REGISTRATION':\r\n            return (\r\n                state = {\r\n                    table: [...state.table, action.payload.data],\r\n                    status: action.payload.status,\r\n                }\r\n            )\r\n        case 'DELETE_USER':\r\n            return (\r\n                state = {\r\n                    ...state,\r\n                    table: action.payload,\r\n                    delStatus: action.delStatus\r\n                }\r\n            )\r\n        case 'FIND_USER_DATA':\r\n            return (\r\n                state = {\r\n                    table: [...state.table],\r\n                    findUser: action.payload.data,\r\n                    findStatus: action.findStatus\r\n                }\r\n            )\r\n        case 'USER_UPDATE':\r\n            const maintable = [...state.table].slice();\r\n            maintable[action.index] = action.payload.data\r\n            return (\r\n                state = {\r\n                    table: maintable,\r\n                    editStatus: action.payload.status,\r\n                }\r\n            )\r\n    }\r\n    return state\r\n};","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Blog\\postAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Task-Management\\taskAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\global.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Blog\\blog.js",["243","244"],"import React, { useEffect, useState } from 'react';\r\nimport { MTButton } from '../../component/MTForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BlogStyle } from './blogStyle'\r\nimport { BlogData, BlogCreate, DeleteBlog } from '../../../../core/Redux/Blog/postAction';\r\nimport { Card, Button, Form, Input, Upload, Select, Tooltip } from 'antd';\r\nimport coverImg from '../../../../core/images/sample_blog-cover.png'\r\nimport Icons from '../../component/Icons/icons';\r\nimport MTModal from '../../component/MTmodel/modal';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport { Pagination } from 'antd';\r\n\r\nexport const Blog = () => {\r\n    const { Meta } = Card;\r\n    const { Option } = Select;\r\n    const [form] = Form.useForm();\r\n    const [delet, setDelete] = useState(false);\r\n    const [create, setCreate] = useState(false);\r\n    const [view, setView] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [BlogToken, setBlogToken] = useState(\"\")\r\n    const [authorToken, setauthorToken] = useState(\"\")\r\n    const [fileList, updateFileList] = useState([]);\r\n    const children = [];\r\n    const dispatch = useDispatch()\r\n    const blogs = useSelector(state => state)\r\n\r\n    useEffect(() => {\r\n        dispatch(BlogData())\r\n    }, [dispatch])\r\n    useEffect(() => {\r\n        if (blogs.blogs.status === true) {\r\n            setCreate(false)\r\n            setLoading(false)\r\n            form.resetFields();\r\n        }\r\n    }, [blogs.blogs.status, form])\r\n    // console.log(blogs.blogs)\r\n    const props1 = {\r\n        action: 'http://10.1.1.20:8085/file/uploadFile',\r\n        headers: { 'Authorization': `Bearer ${JSON.parse(sessionStorage.getItem('Login')).data.jwtToken.token}` },\r\n        fileList,\r\n        onChange: info => {\r\n            info.file.response = null\r\n            if (info.fileList.length === 2) {\r\n                updateFileList(info.fileList.pop(info.fileList[1]));\r\n            }\r\n        },\r\n        showUploadList: {\r\n            showRemoveIcon: true,\r\n            removeIcon: <Icons type=\"close\" />,\r\n        },\r\n    };\r\n    const localFiles = {\r\n        multiple: true,\r\n        action: 'http://10.1.1.20:8085/file/uploadFile',\r\n        headers: { 'Authorization': `Bearer ${JSON.parse(sessionStorage.getItem('Login')).data.jwtToken.token}` },\r\n        showUploadList: {\r\n            showRemoveIcon: true,\r\n            removeIcon: <Icons type=\"close\" />,\r\n        },\r\n    }\r\n    const onCancel = () => {\r\n        form.resetFields();\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        setDelete(false);\r\n        setView(false);\r\n        setCreate(false)\r\n    }\r\n    const deleteModal = (title, authorToken, BlogToken) => {\r\n        document.body.classList.remove('ReactModal__Body--before-close')\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        setDelete(true);\r\n        setTitle(title)\r\n        setBlogToken(BlogToken)\r\n        setauthorToken(authorToken)\r\n    };\r\n    const deleteEle = () => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        setDelete(false);\r\n        dispatch(DeleteBlog(BlogToken, authorToken))\r\n    };\r\n    const CreatePostModal = () => {\r\n        document.body.classList.remove('ReactModal__Body--before-close')\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        setCreate(true);\r\n    };\r\n    const createEle = (value) => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        value.coverImageToken = value.coverImageToken[0].response.response.token\r\n        value.filesToken = value.filesToken.fileList.map((p, i) => p.response.response.token)\r\n        const hash = value.hashTags\r\n        const hash1 = hash.map((p) => \"#\" + p)\r\n        const hash2 = hash1.join()\r\n        value.hashTags = hash2;\r\n        const authorToken = JSON.parse(sessionStorage.getItem('Login')).data.usertoken\r\n        dispatch(BlogCreate(value, authorToken))\r\n        setLoading(true);\r\n    };\r\n    const ViewPostModal = () => {\r\n        document.body.classList.remove('ReactModal__Body--before-close')\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        setView(true);\r\n    };\r\n    const viewEle = () => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        setView(false);\r\n    };\r\n    const normFile = (e) => {\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n    function onShowSizeChange(current, pageSize) {\r\n        console.log(current, pageSize);\r\n    }\r\n    children.push(<Option></Option>);\r\n    return (\r\n        <BlogStyle>\r\n            <div className=\"mainContent\">\r\n                <div className=\"heading\">\r\n                    <div className=\"title\">Blog</div>\r\n                    <div><MTButton className=\"createEle\" onClick={CreatePostModal}>Create</MTButton></div>\r\n                </div>\r\n                <div className=\"body\">\r\n                    <div className=\"cardcontent\">\r\n                        <div className=\"cardBox\">\r\n                            {blogs.blogs.blogs === undefined ? null : blogs.blogs.blogs.map((menu, index) => (\r\n                                <Card key={index} className=\"card\" cover={<img src={coverImg} alt=\"cardimg\" onClick={ViewPostModal} />}>\r\n                                    <Meta title={menu.Title}\r\n                                        description={\r\n                                            <span>\r\n                                                {menu.CreationTime}<br></br>\r\n                                                <span className=\"user\"><Icons type=\"author\" /></span>\r\n                                                <span className=\"author\"> {menu.Author}</span>\r\n                                                <span className=\"editDel\">\r\n                                                    <Tooltip placement=\"bottom\" title=\"edit\">\r\n                                                        <span>\r\n                                                            <Icons type=\"post_edit\" />\r\n                                                        </span>\r\n                                                    </Tooltip>\r\n                                                    <Tooltip placement=\"bottom\" title=\"delete\">\r\n                                                        <span onClick={() => deleteModal(menu.Title, menu.authorToken, menu.BlogToken)}>\r\n                                                            <Icons type=\"post_delete\" />\r\n                                                        </span>\r\n                                                    </Tooltip>\r\n                                                </span>\r\n                                            </span>\r\n                                        }\r\n                                    />\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    {/* <Pagination\r\n                        showSizeChanger\r\n                        onShowSizeChange={onShowSizeChange}\r\n                        defaultCurrent={1}\r\n                        total={50}\r\n                        pageSize={10}\r\n                    /> */}\r\n                </div>\r\n                {/* delete Post */}\r\n                <MTModal\r\n                    visible={delet}\r\n                    title=\"Delete Post\"\r\n                    onOk={deleteEle}\r\n                    closable={false}\r\n                    maskClosable={false}\r\n                    footer={[\r\n                        <Button key=\"submit\" className=\"deleteEle\" onClick={deleteEle}>Delete</Button>,\r\n                        <Button key=\"back\" className=\"cancelEle\" onClick={onCancel}>Cancel</Button>\r\n                    ]}\r\n                >\r\n                    <p className=\"warning\">Are you sure to delete this post permenently?</p>\r\n                    <Icons type=\"del_postname\" /> <span className=\"title\">{title}</span>\r\n                </MTModal>\r\n                {/* View Post */}\r\n                <MTModal\r\n                    visible={view}\r\n                    title=\"View Post\"\r\n                    className=\"footer\"\r\n                    onOk={viewEle}\r\n                    onCancel={viewEle}\r\n                    closable={true}\r\n                    maskClosable={false}\r\n                    width={850}\r\n                >\r\n                    <div className=\"viewHeader\">First Sample Post For View</div>\r\n                    <div className=\"viewContent\">\r\n                        <img src={coverImg} alt=\"cardimg\" className=\"viewImg\" />\r\n                        <div>\r\n                            <div className=\"createCont\"><span className=\"sideHeading\"> Created On :</span><br></br><p>02 Auguest 2020, 06:33</p></div>\r\n                            <div className=\"author\"><span className=\"sideHeading\"> Author :</span><br></br><p>Hepin Vagadiya</p></div>\r\n                            <div className=\"author\"><span className=\"sideHeading\"> HashTags :</span><br></br><p>#Tag1, #Reactjs, #usecases, #training, #postoftheday</p></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"postDetail\">\r\n                        This is sample post created for design make sure if conetent is bigger then scroll will be automatic generated<br></br><br></br>\r\n                            This is sample post created for design make sure if conetent is bigger then scroll will be automatic generated\r\n                            This is sample post created for design make sure if conetent is bigger then scroll will be automatic generated\r\n                        </div>\r\n                    <div className=\"author\">\r\n                        <span className=\"sideHeading\"> Attechments :</span><br></br>\r\n                        <div className=\"attech\">attechment1_post123.pdf <DownloadOutlined /></div>\r\n                    </div>\r\n                </MTModal>\r\n                {/* Create Post*/}\r\n                <MTModal\r\n                    visible={create}\r\n                    title=\"New Post\"\r\n                    onOk={form.submit}\r\n                    onCancel={onCancel}\r\n                    closable={true}\r\n                    maskClosable={false}\r\n                    footer={[\r\n                        <Button key=\"submit\" loading={loading} form=\"create\" className=\"deleteEle\" htmlType=\"submit\">Save</Button>,\r\n                    ]}\r\n                >\r\n                    <div className=\"newPostContent\">\r\n                        <Form form={form} layout=\"inline\" onFinish={createEle} id=\"create\">\r\n                            <div className=\"inputs\">\r\n                                <div className=\"label\">Post Title</div>\r\n                                <Form.Item name='title' rules={[{ required: true, message: 'Please input Post Title!' }]} >\r\n                                    <Input\r\n                                        autoComplete=\"off\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Post Title\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <div className=\"inputs\">\r\n                                <div className=\"label\">Post Cover Image </div>\r\n                                <Form.Item\r\n                                    name=\"coverImageToken\"\r\n                                    valuePropName=\"fileList\"\r\n                                    getValueFromEvent={normFile}\r\n                                    rules={[{ required: true, message: 'Please Attech PNG file!' }]}\r\n                                >\r\n                                    <Upload accept='.png' {...props1} className=\"upload-list-inline\">\r\n                                        <MTButton className=\"select\" >Select</MTButton>\r\n                                    </Upload>\r\n                                </Form.Item>\r\n                            </div>\r\n                            <div className=\"inputs\">\r\n                                <div className=\"label\">Post Content</div>\r\n                                <Form.Item name='content'>\r\n                                    <Input.TextArea\r\n                                        autoComplete=\"off\"\r\n                                        placeholder=\"Enter Post Content\"\r\n                                        style={{ maxHeight: \"130px\" }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <div className=\"inputs\">\r\n                                <div className=\"label\">Attechments</div>\r\n                                    \r\n                                <Form.Item name=\"filesToken\" getValueFromEvent={normFile} rules={[{ required: true, message: 'Please Attech any file !' }]} >\r\n                                    <Upload {...localFiles} className=\"upload-list-inline local\">\r\n                                        <MTButton className=\"select\">Select</MTButton>\r\n                                    </Upload>\r\n                                </Form.Item>\r\n                            </div>\r\n                            <div className=\"inputs\">\r\n                                <div className=\"label\">Hashtags</div>\r\n                                <Form.Item name=\"hashTags\" rules={[{ required: true, message: 'Please Select Any Option!' }]} >\r\n                                    <Select mode=\"tags\" style={{ width: '100%' }} placeholder=\"Enter Tags\">\r\n                                        {children}\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </MTModal>\r\n            </div>\r\n        </BlogStyle >\r\n    )\r\n}\r\n\r\nexport default Blog;","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Task-Management\\taskReducer.js",["245","246"],"const initState = {\r\n    ProgressList: [],\r\n};\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_PROGRESS_DATA':\r\n            state = {\r\n                ProgressList: action.payload,\r\n            }\r\n    }\r\n    return state;\r\n};  ","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Newpassword\\newpwStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\CardContent.js",[],{"ruleId":"247","severity":1,"message":"248","line":8,"column":10,"nodeType":"249","messageId":"250","endLine":8,"endColumn":21},{"ruleId":"251","replacedBy":"252"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"247","severity":1,"message":"255","line":1,"column":17,"nodeType":"249","messageId":"250","endLine":1,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":5,"column":23,"nodeType":"249","messageId":"250","endLine":5,"endColumn":34},{"ruleId":"251","replacedBy":"256"},{"ruleId":"253","replacedBy":"257"},{"ruleId":"251","replacedBy":"258"},{"ruleId":"253","replacedBy":"259"},{"ruleId":"251","replacedBy":"260"},{"ruleId":"253","replacedBy":"261"},{"ruleId":"251","replacedBy":"262"},{"ruleId":"253","replacedBy":"263"},{"ruleId":"251","replacedBy":"264"},{"ruleId":"253","replacedBy":"265"},{"ruleId":"266","severity":1,"message":"267","line":48,"column":8,"nodeType":"268","endLine":48,"endColumn":95,"suggestions":"269"},{"ruleId":"251","replacedBy":"270"},{"ruleId":"253","replacedBy":"271"},{"ruleId":"251","replacedBy":"272"},{"ruleId":"253","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":7,"column":1,"nodeType":"276","endLine":35,"endColumn":3},{"ruleId":"277","severity":1,"message":"278","line":8,"column":5,"nodeType":"279","messageId":"280","endLine":33,"endColumn":6},{"ruleId":"274","severity":1,"message":"275","line":5,"column":1,"nodeType":"276","endLine":57,"endColumn":3},{"ruleId":"277","severity":1,"message":"278","line":6,"column":5,"nodeType":"279","messageId":"280","endLine":55,"endColumn":6},{"ruleId":"274","severity":1,"message":"275","line":4,"column":1,"nodeType":"276","endLine":25,"endColumn":3},{"ruleId":"277","severity":1,"message":"278","line":5,"column":5,"nodeType":"279","messageId":"280","endLine":23,"endColumn":6},{"ruleId":"274","severity":1,"message":"275","line":4,"column":1,"nodeType":"276","endLine":47,"endColumn":3},{"ruleId":"277","severity":1,"message":"278","line":5,"column":5,"nodeType":"279","messageId":"280","endLine":45,"endColumn":6},{"ruleId":"247","severity":1,"message":"281","line":11,"column":10,"nodeType":"249","messageId":"250","endLine":11,"endColumn":20},{"ruleId":"247","severity":1,"message":"282","line":116,"column":14,"nodeType":"249","messageId":"250","endLine":116,"endColumn":30},{"ruleId":"274","severity":1,"message":"275","line":4,"column":1,"nodeType":"276","endLine":12,"endColumn":3},{"ruleId":"277","severity":1,"message":"278","line":5,"column":5,"nodeType":"279","messageId":"280","endLine":10,"endColumn":6},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","no-native-reassign",["283"],"no-negated-in-lhs",["284"],"'useEffect' is defined but never used.",["283"],["284"],["283"],["284"],["283"],["284"],["283"],["284"],["283"],["284"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.table.delStatus'. Either include it or remove the dependency array.","ArrayExpression",["285"],["283"],["284"],["283"],["284"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Pagination' is defined but never used.","'onShowSizeChange' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"286","fix":"287"},"Update the dependencies array to be: [user.table.status, user.table.findUser, user.table.editStatus, user.table.table, form, user.table.delStatus]",{"range":"288","text":"289"},[2046,2133],"[user.table.status, user.table.findUser, user.table.editStatus, user.table.table, form, user.table.delStatus]"]
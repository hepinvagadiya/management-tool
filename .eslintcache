[{"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\User\\userAction.js":"1","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\App.js":"2","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\taskMan.js":"3","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\UserGroup\\userGroupAction.js":"4","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\signin.js":"5","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\auth\\authAction.js":"6","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\authRouter.js":"7","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\UserGroup\\userGroup.js":"8","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\SigninStyle.js":"9","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\OTP\\otp.js":"10","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\OTP\\OtpStyle.js":"11","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\page.js":"12","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\pageRouter.js":"13","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\dark-theme.js":"14","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Sidebar\\sidebar.js":"15","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Header\\headerStyle.js":"16","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Chat_Room\\chatRoom.js":"17","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Sidebar\\sidebarStyle.js":"18","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\Icons\\icons.js":"19","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\User\\userStyle.js":"20","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTmodel\\modal.js":"21","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\index.js":"22","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Header\\header.js":"23","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Newpassword\\newpass.js":"24","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\User\\user.js":"25","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Array\\array.js":"26","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Forgetpassword\\forgetpwStyle.js":"27","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Blog\\blogStyle.js":"28","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTForm\\MTbutton\\button.js":"29","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Forgetpassword\\forgetpass.js":"30","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\taskManStyle.js":"31","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\UserGroup\\userGroStyle.js":"32","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\light-theme.js":"33","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Chat_Room\\chatRoomStyle.js":"34","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTForm\\index.js":"35","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\PageStyle.js":"36","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\index.js":"37","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\store.js":"38","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\auth\\authReducer.js":"39","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\UserGroup\\userGroupReducer.js":"40","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\reportWebVitals.js":"41","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Blog\\postsReducer.js":"42","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\User\\userReducer.js":"43","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Blog\\postAction.js":"44","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Task-Management\\taskAction.js":"45","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\global.js":"46","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Blog\\blog.js":"47","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Task-Management\\taskReducer.js":"48","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Newpassword\\newpwStyle.js":"49","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\Progress.js":"50","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\Complete.js":"51"},{"size":2731,"mtime":1611730225571,"results":"52","hashOfConfig":"53"},{"size":607,"mtime":1611806524714,"results":"54","hashOfConfig":"53"},{"size":11343,"mtime":1611807237199,"results":"55","hashOfConfig":"53"},{"size":3287,"mtime":1611730230606,"results":"56","hashOfConfig":"53"},{"size":4145,"mtime":1611722688800,"results":"57","hashOfConfig":"53"},{"size":4752,"mtime":1611731380618,"results":"58","hashOfConfig":"53"},{"size":702,"mtime":1611228827388,"results":"59","hashOfConfig":"53"},{"size":8743,"mtime":1611631267945,"results":"60","hashOfConfig":"53"},{"size":3400,"mtime":1611223579055,"results":"61","hashOfConfig":"53"},{"size":2320,"mtime":1611295544315,"results":"62","hashOfConfig":"53"},{"size":1929,"mtime":1610348148139,"results":"63","hashOfConfig":"53"},{"size":1569,"mtime":1611806349595,"results":"64","hashOfConfig":"53"},{"size":834,"mtime":1609412006459,"results":"65","hashOfConfig":"53"},{"size":577,"mtime":1610951988651,"results":"66","hashOfConfig":"53"},{"size":1199,"mtime":1611731101317,"results":"67","hashOfConfig":"53"},{"size":444,"mtime":1609407701149,"results":"68","hashOfConfig":"53"},{"size":625,"mtime":1609397505791,"results":"69","hashOfConfig":"53"},{"size":1056,"mtime":1611558109963,"results":"70","hashOfConfig":"53"},{"size":29978,"mtime":1611738239308,"results":"71","hashOfConfig":"53"},{"size":2102,"mtime":1611555011690,"results":"72","hashOfConfig":"53"},{"size":446,"mtime":1609827035278,"results":"73","hashOfConfig":"53"},{"size":134,"mtime":1609303744560,"results":"74","hashOfConfig":"53"},{"size":1989,"mtime":1611735390708,"results":"75","hashOfConfig":"53"},{"size":4054,"mtime":1611295649744,"results":"76","hashOfConfig":"53"},{"size":16720,"mtime":1611731774827,"results":"77","hashOfConfig":"53"},{"size":2057,"mtime":1610353106642,"results":"78","hashOfConfig":"53"},{"size":1846,"mtime":1610348047290,"results":"79","hashOfConfig":"53"},{"size":6132,"mtime":1611578744494,"results":"80","hashOfConfig":"53"},{"size":300,"mtime":1609827218437,"results":"81","hashOfConfig":"53"},{"size":2226,"mtime":1611294879463,"results":"82","hashOfConfig":"53"},{"size":11462,"mtime":1611750184030,"results":"83","hashOfConfig":"53"},{"size":2108,"mtime":1611558993162,"results":"84","hashOfConfig":"53"},{"size":175,"mtime":1609407541194,"results":"85","hashOfConfig":"53"},{"size":835,"mtime":1609410117084,"results":"86","hashOfConfig":"53"},{"size":74,"mtime":1609749031591,"results":"87","hashOfConfig":"53"},{"size":840,"mtime":1611557742270,"results":"88","hashOfConfig":"53"},{"size":392,"mtime":1610348748661,"results":"89","hashOfConfig":"53"},{"size":910,"mtime":1610784771500,"results":"90","hashOfConfig":"53"},{"size":843,"mtime":1610434249358,"results":"91","hashOfConfig":"53"},{"size":1627,"mtime":1611548676217,"results":"92","hashOfConfig":"53"},{"size":362,"mtime":1608102818989,"results":"93","hashOfConfig":"53"},{"size":369,"mtime":1610190633245,"results":"94","hashOfConfig":"53"},{"size":1291,"mtime":1611127682207,"results":"95","hashOfConfig":"53"},{"size":623,"mtime":1610340434903,"results":"96","hashOfConfig":"53"},{"size":622,"mtime":1611202423702,"results":"97","hashOfConfig":"53"},{"size":12233,"mtime":1611735055220,"results":"98","hashOfConfig":"53"},{"size":13842,"mtime":1611655225683,"results":"99","hashOfConfig":"53"},{"size":630,"mtime":1611202584612,"results":"100","hashOfConfig":"53"},{"size":2208,"mtime":1610348232472,"results":"101","hashOfConfig":"53"},{"size":6233,"mtime":1611737826428,"results":"102","hashOfConfig":"53"},{"size":4880,"mtime":1611750406599,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bjm6b4",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"118"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"138"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"182"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"129"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\User\\userAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\App.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\taskMan.js",["219","220","221"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\UserGroup\\userGroupAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\signin.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\auth\\authAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\authRouter.js",[],["222","223"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\UserGroup\\userGroup.js",["224"],"import React, { useEffect, useState } from 'react';\r\nimport { UserGroStyle } from './userGroStyle'\r\nimport { MTButton } from '../../component/MTForm';\r\nimport { Table, Tooltip } from 'antd';\r\nimport MTModal from '../../component/MTmodel/modal';\r\nimport { Button, Form, Input, Radio, } from 'antd';\r\nimport { UserGroupData, GetUserData, Registration, DeleteUserGroup, FindUserGroup, UpdateGroup } from '../../../../core/Redux/UserGroup/userGroupAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Icons from '../../../modules/component/Icons/icons'\r\n\r\nimport { Select } from 'antd';\r\n\r\nexport const UserGroup = () => {\r\n    const user = useSelector(state => state)\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useState(false);\r\n    const [createUserGro, setCreateUserGro] = useState(false);\r\n    const [delet, setDelete] = useState(false);\r\n    const [editUserGr, setEditUserGr] = useState(false);\r\n    const [editToken, setEdittoken] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\");\r\n    const [gettoken, setToken] = useState(\"\");\r\n    const [select, selectIndex] = useState(\"\")\r\n    useEffect(() => {\r\n        dispatch(UserGroupData())\r\n        dispatch(GetUserData())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (user.groupTable.status === true) {\r\n            setCreateUserGro(false)\r\n            setLoading(false);\r\n            form.resetFields();\r\n        }\r\n        if (user.groupTable.editStatus === true) { setLoading(false); form.resetFields(); setEditUserGr(false) }\r\n        if (user.groupTable.findStatus) {\r\n            setEdittoken(user.groupTable.findUserGroup.data.token)\r\n            form.setFieldsValue(user.groupTable.findUserGroup.data);\r\n            if (user.groupTable.findStatus === true) { setEditUserGr(true) }\r\n        }\r\n    }, [user.groupTable.status, user.groupTable.findUserGroup, user.groupTable.findStatus, user.groupTable.editStatus, form])\r\n\r\n    const columns = [\r\n        {\r\n            \"title\": \"Group Name\",\r\n            \"dataIndex\": \"groupName\",\r\n            \"key\": \"groupName\",\r\n            \"width\": '45%',\r\n            \"ellipsis\": true,\r\n            sorter: (a, b) => a.groupName.length - b.groupName.length,\r\n        },\r\n        {\r\n            \"title\": \"Group Type\",\r\n            \"dataIndex\": \"groupType\",\r\n            \"key\": \"groupType\",\r\n            \"width\": '45%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Action\",\r\n            \"dataIndex\": \"action\",\r\n            \"key\": \"action\",\r\n            \"ellipsis\": true,\r\n            render: (text, record, index) => (\r\n                <span>\r\n                    <Tooltip placement=\"bottom\" title=\"Edit\">\r\n                        <span onClick={() => selectRow(record.token, index)} style={{ cursor: \"pointer\" }}>\r\n                            <Icons type=\"post_edit\" />\r\n                        </span>\r\n                    </Tooltip>\r\n                    <Tooltip placement=\"bottom\" title=\"Delete\">\r\n                        <span onClick={() => deleteTableRow(record.groupName, record.token)} style={{ cursor: \"pointer\" }}>\r\n                            <Icons type=\"post_delete\" />\r\n                        </span>\r\n                    </Tooltip>\r\n                </span>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    const CreatePostModal = () => {\r\n        document.body.classList.remove('ReactModal__Body--before-close')\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        setCreateUserGro(true)\r\n    };\r\n    const createGroup = (value) => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        dispatch(Registration(value))\r\n        form.resetFields();\r\n        setLoading(true);\r\n    };\r\n    const deleteTableRow = (title, token) => {\r\n        setDelete(true);\r\n        setTitle(title);\r\n        setToken(token)\r\n    }\r\n    const deleteOk = () => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        dispatch(DeleteUserGroup(gettoken))\r\n        setDelete(false);\r\n    }\r\n    const selectRow = (record, token) => {\r\n        dispatch(FindUserGroup(record))\r\n        selectIndex(token);\r\n    }\r\n    const editUserGrModal = (value) => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        dispatch(UpdateGroup(value, editToken, select))\r\n        setLoading(true);\r\n    }\r\n    const onCancel = () => {\r\n        form.resetFields();\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        setDelete(false);\r\n        setCreateUserGro(false)\r\n        setLoading(false);\r\n        setEditUserGr(false)\r\n    }\r\n\r\n    return (\r\n        <UserGroStyle>\r\n            <div className=\"heading\">\r\n                <div className=\"title\">UserGroup</div>\r\n                <div ><MTButton className=\"createEle\" onClick={CreatePostModal}>Create</MTButton></div>\r\n            </div>\r\n            <div className=\"usergrContent\">\r\n                {/* Delete Table Raw */}\r\n                <MTModal\r\n                    visible={delet}\r\n                    title=\"Delete UserGroup\"\r\n                    onOk={deleteOk}\r\n                    closable={false}\r\n                    maskClosable={false}\r\n                    footer={[\r\n                        <Button key=\"submit\" className=\"deleteEle\" onClick={deleteOk}>Delete</Button>,\r\n                        <Button key=\"back\" className=\"cancelEle\" onClick={onCancel}>Cancel</Button>\r\n                    ]}\r\n                >\r\n                    <p className=\"warning\">Are you sure to delete this UserGroup permenently?</p>\r\n                    <Icons type=\"groupsMenu\" /> <span className=\"title\">{title}</span>\r\n                </MTModal>\r\n                <MTModal\r\n                    visible={editUserGr === true ? editUserGr : createUserGro}\r\n                    title={createUserGro === true ? 'User Group' : 'Edit UserGroup'}\r\n                    onOk={form.submit}\r\n                    onCancel={onCancel}\r\n                    closable={true}\r\n                    maskClosable={false}\r\n                    footer={[\r\n                        <Button key=\"submit\" htmlType=\"submit\" form=\"formgroup\" loading={loading} className=\"deleteEle\">Save</Button>,\r\n                    ]}\r\n                >\r\n                    <Form layout=\"inline\" id=\"formgroup\" form={form} onFinish={editUserGr === true ? editUserGrModal : createGroup} >\r\n                        <div className=\"inputs\">\r\n                            <div className=\"label\">Group Name</div>\r\n                            <Form.Item name=\"groupName\" rules={[{ required: true, message: 'Please input Group Name!' }]} >\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    placeholder=\"Enter Group Name\"\r\n                                />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"inputs\">\r\n                            <div className=\"label\">Group Type</div>\r\n                            <Form.Item name=\"groupType\" rules={[{ required: true, message: 'Please pick public or private!' }]} >\r\n                                <Radio.Group>\r\n                                    <Radio value=\"Public\" style={{ padding: \"5px\" }}>Public(Readable to user outside group)</Radio>\r\n                                    <Radio value=\"Private\" style={{ padding: \"5px\" }}>Private (Accessible to Group Users Only)</Radio>\r\n                                </Radio.Group>\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"inputs\">\r\n                            <div className=\"label\">Group Users</div>\r\n                            <Form.Item name=\"groupUsers\" rules={[{ required: true, message: 'Please input Group User!' }]} >\r\n                                <Select mode=\"multiple\" style={{ width: '100%' }} placeholder=\"Select Any Group\" options={user.groupTable.getAllUser} />\r\n                            </Form.Item>\r\n                        </div>\r\n                    </Form>\r\n                </MTModal>\r\n                <div className=\"tableContent\">\r\n                    <Table\r\n                        sticky\r\n                        pagination={{ pageSize: 12 }}\r\n                        pagination={{ position: ['bottomRight'] }}\r\n                        columns={columns}\r\n                        dataSource={user.groupTable.groupTable}\r\n                        scroll={{ y: 'calc(77.5vh - 4em)' }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </UserGroStyle>\r\n    );\r\n}\r\n\r\nexport default UserGroup;",["225","226"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\SigninStyle.js",[],["227","228"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\OTP\\otp.js",["229","230"],"import React, { useState } from 'react';\r\nimport Logo from '../../../../../core/images/logo.svg'\r\nimport { MTButton } from '../../../component/MTForm';\r\nimport OtpStyle from \"./OtpStyle\";\r\nimport { Form, Input } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetOtp } from '../../../../../core/Redux/auth/authAction';\r\n\r\nexport const Otp = () => {\r\n    const dispatch = useDispatch()\r\n    const [otp, setOtp] = React.useState();\r\n\r\n    const submit = () => {\r\n        dispatch(GetOtp(otp))\r\n    }\r\n    const validateMessages = {\r\n        required: 'Otp is required!',\r\n    };\r\n    const checkPrice = () => {\r\n        if (otp > 9999 && otp < 999999) {\r\n            return Promise.resolve();\r\n        }\r\n        return Promise.reject('Otp must be in 6 digits!');\r\n    };\r\n    return (\r\n        <OtpStyle>\r\n            <div className=\"signinContent\">\r\n                <div className=\"leftContainer\">\r\n                    <img className=\"logo\" src={Logo} alt=\"dsff\"></img>\r\n                    <div className=\"login\">Verify OTP</div>\r\n                    <div className=\"welcome\">Enter 6 digit OTP received via mail.</div>\r\n                    <Form onFinish={submit} requiredMark={\"requiredMark\"} validateMessages={validateMessages}>\r\n                        <div className=\"inputs\">\r\n                            <div className=\"label\">OTP<sup>*</sup></div>\r\n                            <Form.Item name={['user', 'number']} rules={[{ validator: checkPrice, required: true, }]}>\r\n                                <Input\r\n                                autoComplete=\"off\"\r\n                                    className=\"username\"\r\n                                    name=\"otp\"\r\n                                    type=\"number\"\r\n                                    placeholder=\"Enter otp\"\r\n                                    onChange={e => setOtp(e.target.value)}\r\n                                />\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"submitContent\" >\r\n                            <MTButton className=\"submit\" htmlType=\"submit\">Verify OTP</MTButton>\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </OtpStyle >\r\n    );\r\n}\r\n\r\nexport default Otp;",["231","232"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\OTP\\OtpStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\page.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\pageRouter.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\dark-theme.js",[],["233","234"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Sidebar\\sidebar.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Header\\headerStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Chat_Room\\chatRoom.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Sidebar\\sidebarStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\Icons\\icons.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\User\\userStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTmodel\\modal.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\index.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Header\\header.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Newpassword\\newpass.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\User\\user.js",["235","236"],"import React, { useEffect, useState } from 'react';\r\nimport { MTButton } from '../../component/MTForm';\r\nimport { UserStyle } from './userStyle'\r\nimport { Table, Tooltip } from 'antd';\r\nimport MTModal from '../../component/MTmodel/modal';\r\nimport { Button, Form, Input, Radio, } from 'antd';\r\nimport { Select } from 'antd';\r\nimport { UserData, Registration, DeleteUser, FindUser, Update } from '../../../../core/Redux/User/userAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Icons from '../../../modules/component/Icons/icons'\r\n\r\nexport const User = () => {\r\n    const [form] = Form.useForm();\r\n    const { Option } = Select;\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state)\r\n    const [newUser, setNewUser] = useState(false);\r\n    const [editUser, setEditUser] = useState(false);\r\n    const [contact, setContact] = useState();\r\n    const [delet, setDelete] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [index, setToken] = useState(\"\")\r\n    const [editToken, setEdittoken] = useState(\"\")\r\n    const [loading, setLoading] = useState(false);\r\n    const [select, selectIndex] = useState(\"\")\r\n    const validateMessages = {\r\n        required: 'Email is required!',\r\n        types: { email: 'Email is not a valid email!', },\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(UserData())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (user.table.status === true) {\r\n            setNewUser(false)\r\n            setLoading(false)\r\n            form.resetFields();\r\n        }\r\n        if (user.table.editStatus === true) { form.resetFields(); setLoading(false); setEditUser(false) }\r\n        if (user.table.findUser) {\r\n            setEdittoken(user.table.findUser.data[0].token)\r\n            form.setFieldsValue(user.table.findUser.data[0]);\r\n\r\n            if (user.table.findUser.status === true) { setEditUser(true); setContact(user.table.findUser.data[0].contact) }\r\n        }\r\n    }, [user.table.status, user.table.findUser, user.table.editStatus, form])\r\n\r\n    const columns = [\r\n        {\r\n            \"title\": \"User Name\",\r\n            render: listUsers => `${listUsers.firstName} ${listUsers.lastName}`,\r\n            \"key\": \"firstName\",\r\n            \"width\": '20%',\r\n            \"ellipsis\": true,\r\n            sorter: (a, b) => a.firstName.length - b.firstName.length,\r\n        },\r\n        {\r\n            \"title\": \"Email\",\r\n            \"dataIndex\": \"email\",\r\n            \"key\": \"email\",\r\n            \"width\": '20%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Contect\",\r\n            \"dataIndex\": \"contact\",\r\n            \"key\": \"contact\",\r\n            \"width\": '15%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Designation\",\r\n            \"dataIndex\": \"designation\",\r\n            \"key\": \"designation\",\r\n            \"width\": '15%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Created Time\",\r\n            \"dataIndex\": \"createdTime\",\r\n            \"key\": \"createdTime\",\r\n            \"width\": '20%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Action\",\r\n            \"dataIndex\": \"action\",\r\n            \"key\": \"action\",\r\n            \"ellipsis\": true,\r\n            render: (text, record, index) => (\r\n                <span>\r\n                    <Tooltip placement=\"bottom\" title=\"Edit\">\r\n                        <span onClick={() => selectRow(record.token, index)} style={{cursor: \"pointer\"}}>\r\n                            <Icons type=\"post_edit\" />\r\n                        </span>\r\n                    </Tooltip>\r\n                    <Tooltip placement=\"bottom\" title=\"Delete\">\r\n                        <span onClick={() => deleteTableRow(record.token, record.firstName + \" \" + record.lastName)} style={{cursor: \"pointer\"}}>\r\n                            <Icons type=\"post_delete\" />\r\n                        </span>\r\n                    </Tooltip>\r\n                </span>\r\n            ),\r\n        },\r\n    ];\r\n    const opt = ['A', 'A+', 'A-', 'B+', 'B-', 'O+', 'O-', 'AB+', 'AB-']\r\n    const restrict = (event) => {\r\n        const regex = new RegExp(\"^[a-zA-Z]+$\");\r\n        const key = String.fromCharCode(!event.charCode ? event.which : event.charCode);\r\n        if (!regex.test(key)) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const CreateModal = (e) => {\r\n        e.preventDefault();\r\n        document.body.classList.remove('ReactModal__Body--before-close')\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        setNewUser(true)\r\n    }\r\n    const createUser = (value) => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        dispatch(Registration(value))\r\n        setLoading(true);\r\n    }\r\n    const deleteTableRow = (record, title) => {\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        setDelete(true);\r\n        setTitle(title);\r\n        setToken(record);\r\n    }\r\n    const deleteOk = () => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        dispatch(DeleteUser(index))\r\n        setDelete(false);\r\n    }\r\n    const selectRow = (record, token) => {\r\n        dispatch(FindUser(record))\r\n        selectIndex(token);\r\n    }\r\n    const editUserModal = (value) => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        dispatch(Update(value, editToken, select))\r\n        setLoading(true);\r\n        setContact(value.contact)\r\n    }\r\n    const onCancel = () => {\r\n        form.resetFields();\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        setNewUser(false);\r\n        setDelete(false);\r\n        setLoading(false);\r\n        setEditUser(false)\r\n    }\r\n    const contectValid = (event) => {\r\n        if (event.charCode == 46) {\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    const checkMobileNo = () => {\r\n        if (contact === \"\") { return Promise.reject('Contect is required'); }\r\n        if (contact < 9999999999) { return Promise.resolve(); }\r\n        return Promise.reject('Please input valid phone no!');\r\n    };\r\n\r\n    return (\r\n        <UserStyle>\r\n            <div className=\"heading\">\r\n                <div className=\"title\">User</div>\r\n                <div><MTButton className=\"createEle\" onClick={CreateModal}>Create</MTButton></div>\r\n            </div>\r\n            {/* Delete Table Raw */}\r\n            <MTModal\r\n                visible={delet}\r\n                title=\"Delete User\"\r\n                onOk={deleteOk}\r\n                closable={false}\r\n                maskClosable={false}\r\n                footer={[\r\n                    <Button key=\"submit\" className=\"deleteEle\" onClick={deleteOk}>Delete</Button>,\r\n                    <Button key=\"back\" className=\"cancelEle\" onClick={onCancel}>Cancel</Button>\r\n                ]}\r\n            >\r\n                <p className=\"warning\">Are you sure to delete this User permenently?</p>\r\n                <Icons type=\"usersMenu\" /> <span className=\"title\">{title}</span>\r\n            </MTModal>\r\n            {/* Create Table Raw */}\r\n            <MTModal\r\n                visible={editUser === true ? editUser : newUser}\r\n                title={newUser === true ? 'New User' : 'Edit User'}\r\n                onOk={form.submit}\r\n                onCancel={onCancel}\r\n                closable={true}\r\n                maskClosable={false}\r\n                footer={[\r\n                    <Button key=\"submit\" loading={loading} htmlType=\"submit\" form=\"userform\" className=\"deleteEle\">Save</Button>,\r\n                ]}\r\n            >\r\n                <Form layout=\"inline\" validateMessages={validateMessages} id=\"userform\" form={form} onFinish={editUser === true ? editUserModal : createUser}>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">First Name</div>\r\n                        <Form.Item name=\"firstName\" rules={[{ required: true, message: 'Please input First Name!' }]} >\r\n                            <Input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                onKeyPress={e => restrict(e)}\r\n                                placeholder=\"Enter First Name\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Last Name</div>\r\n                        <Form.Item name=\"lastName\" rules={[{ required: true, message: 'Please input Last Name!' }]} >\r\n                            <Input\r\n                                name=\"lastname\"\r\n                                autoComplete=\"off\"\r\n                                onKeyPress={e => restrict(e)}\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Last Name\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs\">\r\n                        <div className=\"label\">Email</div>\r\n                        <Form.Item name=\"email\" rules={[{ type: 'email', required: true }]}>\r\n                            <Input\r\n                                name=\"email\"\r\n                                autoComplete=\"off\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Email Address\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\" style={{ padding: \"6px 10px 0px 13px\" }}>\r\n                        <div className=\"label\">Username</div>\r\n                        <Form.Item name=\"username\" rules={[{ required: true, message: 'Please input Username!' }]} >\r\n                            <Input\r\n                                name=\"username\"\r\n                                autoComplete=\"off\"\r\n                                onKeyPress={e => restrict(e)}\r\n                                type=\"text\"\r\n                                placeholder=\"Enter User Name\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\" style={{ padding: \"6px 10px 0px 13px\" }}>\r\n                        <div className=\"label\">Role</div>\r\n                        <Form.Item name=\"role\" rules={[{ required: true, message: 'Please Select Role!' }]} >\r\n                            <Select placeholder=\"Select Role\">\r\n                                <Option value=\"ROLE_ADMIN\">Admin</Option>\r\n                                <Option value=\"ROLE_USER\">User</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Contact No.</div>\r\n                        <Form.Item name=\"contact\" rules={[{ validator: checkMobileNo, required: true }]}>\r\n                            <Input\r\n                                type=\"number\"\r\n                                autoComplete=\"off\"\r\n                                onKeyPress={e => contectValid(e)}\r\n                                placeholder=\"Enter Contact No\"\r\n                                onChange={e => setContact(e.target.value)}\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Designation</div>\r\n                        <Form.Item name=\"designation\" rules={[{ required: true, message: 'Please Select Designation!' }]} >\r\n                            <Select placeholder=\"Select designation\">\r\n                                <Option value=\"Graphic Designer\">Graphic Designer</Option>\r\n                                <Option value=\"Web Devloper\">Web Devloper</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Blood Group</div>\r\n                        <Form.Item name=\"bloodGroup\" rules={[{ required: true, message: 'Please Select bloodGroup!' }]}>\r\n                            <Select placeholder=\"Select bloodgroup\">\r\n                                {opt.map((menu, index) => (\r\n                                    <Option key={index} value={menu}>{menu}</Option>\r\n                                ))}\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\" style={{ padding: \"6px 10px 0px 13px\" }}>\r\n                        <div className=\"label\">Gender</div>\r\n                        <Form.Item name=\"gender\" rules={[{ required: true, message: 'Please Select Gender!' }]} >\r\n                            <Radio.Group>\r\n                                <Radio value=\"Male\" style={{ padding: \"5px\" }}>Male</Radio>\r\n                                <Radio value=\"female\" style={{ padding: \"5px\" }}>female</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                    </div>\r\n\r\n                    <div className=\"inputs\" style={{ padding: \"6px 0px 0px 9px\" }}>\r\n                        <div className=\"label\">Address<sup>*</sup></div>\r\n                        <Form.Item name=\"address\" rules={[{ required: true, message: 'Please input your Address!' }]}                        >\r\n                            <Input placeholder=\"Enter address\" autoComplete=\"off\" onKeyPress={e => restrict(e)} />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Password<sup>*</sup></div>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            hasFeedback\r\n                            rules={[{\r\n                                required: true,\r\n                                message: 'Please input your password!'\r\n                            }]}\r\n                        >\r\n                            <Input.Password\r\n                                className=\"username\"\r\n                                autoComplete=\"off\"\r\n                                placeholder=\"password\"\r\n                                type=\"password\"\r\n                                name=\"newpassword\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Confirm Password<sup>*</sup></div>\r\n                        <Form.Item\r\n                            name=\"confirmPassword\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please confirm your password!',\r\n                                },\r\n                                ({ getFieldValue }) => ({\r\n                                    validator(_, value) {\r\n                                        if (!value || getFieldValue('password') === value) {\r\n                                            return Promise.resolve();\r\n                                        }\r\n                                        return Promise.reject('The passwords are not match!');\r\n                                    },\r\n                                }),\r\n                            ]}\r\n                        >\r\n                            <Input.Password\r\n                                placeholder=\"confirm password\"\r\n                                className=\"username\"\r\n                                autoComplete=\"off\"\r\n                                type=\"password\"\r\n                                name=\"confirmpassword\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                </Form>\r\n            </MTModal>\r\n            <div className=\"tableContent\">\r\n                <Table\r\n                    sticky\r\n                    pagination={{ pageSize: 12 }}\r\n                    pagination={{ position: ['bottomRight'] }}\r\n                    columns={columns}\r\n                    dataSource={user.table.table}\r\n                    scroll={{ y: 'calc(77.5vh - 4em)' }}\r\n                />\r\n            </div>\r\n        </UserStyle >\r\n    );\r\n}\r\n\r\nexport default User;","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Array\\array.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Forgetpassword\\forgetpwStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Blog\\blogStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTForm\\MTbutton\\button.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Forgetpassword\\forgetpass.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\taskManStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\UserGroup\\userGroStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\light-theme.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Chat_Room\\chatRoomStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTForm\\index.js",[],["237","238"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\PageStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\index.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\store.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\auth\\authReducer.js",["239","240"],"const initState = {\r\n    auth: [],\r\n    email: [],\r\n    otp: [],\r\n    changePassword: [],\r\n};\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'FOUND_USER':\r\n            return (\r\n                state = {\r\n                    auth: action.payload,\r\n                }\r\n            );\r\n        case 'FORGET_PASSWORD':\r\n            return (\r\n                state = {\r\n                    email: action.payload,\r\n                }\r\n            );\r\n        case 'REQUEST_OTP':\r\n            return (\r\n                state = {\r\n                    otp: action.payload,\r\n                }\r\n            );\r\n        case 'CHANGE_PASSWORD':\r\n            return (\r\n                state = {\r\n                    changePassword: action.payload,\r\n                }\r\n            );\r\n    }\r\n    return state;\r\n};  ","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\UserGroup\\userGroupReducer.js",["241","242"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\reportWebVitals.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Blog\\postsReducer.js",["243","244","245"],"const initState = {\r\n    blogs: [],\r\n};\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_CARD_DATA':\r\n            state = {\r\n                blogs: action.payload,\r\n            }\r\n        case 'DELETE_POST_DATA':\r\n            state = {\r\n                blogs: action.payload,\r\n            }\r\n    }\r\n    return state;\r\n};  ","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\User\\userReducer.js",["246","247"],"const initState = {\r\n    table: [],\r\n};\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_USER_DATA':\r\n            return (\r\n                state = {\r\n                    table: action.payload.data,\r\n                }\r\n            )\r\n        case 'USER_REGISTRATION':\r\n            return (\r\n                state = {\r\n                    table: [...state.table, action.payload.data],\r\n                    status: action.payload.status,\r\n                }\r\n            )\r\n        case 'DELETE_USER':\r\n            return (\r\n                state = {\r\n                    table: action.payload\r\n                }\r\n            )\r\n        case 'FIND_USER_DATA':\r\n            return (\r\n                state = {\r\n                    table: [...state.table],\r\n                    findUser: action.payload.data,\r\n                    findStatus: action.payload.status\r\n                }\r\n            )\r\n        case 'USER_UPDATE':\r\n            const maintable = [...state.table].slice();\r\n            maintable[action.index] = action.payload.data\r\n            return (\r\n                state = {\r\n                    table: maintable,\r\n                    editStatus: action.payload.status,\r\n                }\r\n            )\r\n    }\r\n    return state\r\n};","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Blog\\postAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Task-Management\\taskAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\global.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Blog\\blog.js",["248"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Task-Management\\taskReducer.js",["249","250","251"],"const initState = {\r\n    TodoList: [],\r\n};\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_TODO_DATA':\r\n            state = {\r\n                TodoList: action.payload,\r\n            }\r\n        case 'GET_PROGRESS_DATA':\r\n            state = {\r\n                TodoList: [...state.TodoList],\r\n                ProgressList: action.payload,\r\n            }\r\n            // case 'COMPLETE_DATA':\r\n            //     state = {\r\n            //         TodoList: [...state.TodoList],\r\n            //         CompleteList: action.payload,\r\n            //     }\r\n    }\r\n    return state;\r\n};  ","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Newpassword\\newpwStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\Progress.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\Complete.js",["252","253","254"],{"ruleId":"255","severity":1,"message":"256","line":19,"column":12,"nodeType":"257","messageId":"258","endLine":19,"endColumn":23},{"ruleId":"255","severity":1,"message":"259","line":47,"column":11,"nodeType":"257","messageId":"258","endLine":47,"endColumn":27},{"ruleId":"255","severity":1,"message":"260","line":53,"column":11,"nodeType":"257","messageId":"258","endLine":53,"endColumn":25},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"265","severity":1,"message":"266","line":186,"column":25,"nodeType":"267","endLine":186,"endColumn":67},{"ruleId":"261","replacedBy":"268"},{"ruleId":"263","replacedBy":"269"},{"ruleId":"261","replacedBy":"270"},{"ruleId":"263","replacedBy":"271"},{"ruleId":"255","severity":1,"message":"272","line":1,"column":17,"nodeType":"257","messageId":"258","endLine":1,"endColumn":25},{"ruleId":"255","severity":1,"message":"273","line":6,"column":23,"nodeType":"257","messageId":"258","endLine":6,"endColumn":34},{"ruleId":"261","replacedBy":"274"},{"ruleId":"263","replacedBy":"275"},{"ruleId":"261","replacedBy":"276"},{"ruleId":"263","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":160,"column":28,"nodeType":"280","messageId":"281","endLine":160,"endColumn":30},{"ruleId":"265","severity":1,"message":"266","line":361,"column":21,"nodeType":"267","endLine":361,"endColumn":63},{"ruleId":"261","replacedBy":"282"},{"ruleId":"263","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":7,"column":1,"nodeType":"286","endLine":35,"endColumn":3},{"ruleId":"287","severity":1,"message":"288","line":8,"column":5,"nodeType":"289","messageId":"290","endLine":33,"endColumn":6},{"ruleId":"284","severity":1,"message":"285","line":5,"column":1,"nodeType":"286","endLine":53,"endColumn":3},{"ruleId":"287","severity":1,"message":"288","line":6,"column":5,"nodeType":"289","messageId":"290","endLine":51,"endColumn":6},{"ruleId":"284","severity":1,"message":"285","line":4,"column":1,"nodeType":"286","endLine":16,"endColumn":3},{"ruleId":"287","severity":1,"message":"288","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":14,"endColumn":6},{"ruleId":"291","severity":1,"message":"292","line":10,"column":9,"nodeType":"293","messageId":"294","endLine":13,"endColumn":14},{"ruleId":"284","severity":1,"message":"285","line":4,"column":1,"nodeType":"286","endLine":44,"endColumn":3},{"ruleId":"287","severity":1,"message":"288","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":42,"endColumn":6},{"ruleId":"295","severity":1,"message":"296","line":116,"column":50,"nodeType":"297","messageId":"298","endLine":116,"endColumn":72},{"ruleId":"284","severity":1,"message":"285","line":4,"column":1,"nodeType":"286","endLine":22,"endColumn":3},{"ruleId":"287","severity":1,"message":"288","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":20,"endColumn":6},{"ruleId":"291","severity":1,"message":"292","line":10,"column":9,"nodeType":"293","messageId":"294","endLine":14,"endColumn":14},{"ruleId":"255","severity":1,"message":"299","line":2,"column":16,"nodeType":"257","messageId":"258","endLine":2,"endColumn":24},{"ruleId":"255","severity":1,"message":"300","line":2,"column":26,"nodeType":"257","messageId":"258","endLine":2,"endColumn":31},{"ruleId":"255","severity":1,"message":"301","line":2,"column":56,"nodeType":"257","messageId":"258","endLine":2,"endColumn":61},"no-unused-vars","'ConfirmTask' is assigned a value but never used.","Identifier","unusedVar","'CompleteTaskOpen' is assigned a value but never used.","'CompleteTaskOk' is assigned a value but never used.","no-native-reassign",["302"],"no-negated-in-lhs",["303"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["302"],["303"],["302"],["303"],"'useState' is defined but never used.","'useSelector' is defined but never used.",["302"],["303"],["302"],["303"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["302"],["303"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","'Progress' is defined but never used.","'Input' is defined but never used.","'Radio' is defined but never used.","no-global-assign","no-unsafe-negation"]
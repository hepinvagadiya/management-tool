[{"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Blog\\blog.js":"1","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTmodel\\modal.js":"2","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\global.js":"3","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\User\\user.js":"4","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\UserGroup\\userGroup.js":"5","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\UserGroup\\userGroStyle.js":"6","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\User\\userStyle.js":"7","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Array\\array.js":"8","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\reportWebVitals.js":"9","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\store.js":"10","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\authRouter.js":"11","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\dark-theme.js":"12","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\signin.js":"13","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\OTP\\otp.js":"14","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Forgetpassword\\forgetpwStyle.js":"15","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Header\\headerStyle.js":"16","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTForm\\index.js":"17","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Blog\\blogStyle.js":"18","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTForm\\MTbutton\\button.js":"19","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Sidebar\\sidebar.js":"20","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Newpassword\\newpass.js":"21","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Forgetpassword\\forgetpass.js":"22","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Sidebar\\sidebarStyle.js":"23","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\App.js":"24","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Blog\\postsReducer.js":"25","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Header\\header.js":"26","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Newpassword\\newpwStyle.js":"27","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Chat_Room\\chatRoom.js":"28","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Blog\\postAction.js":"29","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\page.js":"30","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\pageRouter.js":"31","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\OTP\\OtpStyle.js":"32","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\Icons\\icons.js":"33","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\SigninStyle.js":"34","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Chat_Room\\chatRoomStyle.js":"35","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\User\\userAction.js":"36","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\User\\userReducer.js":"37","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\auth\\authAction.js":"38","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\auth\\authReducer.js":"39","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\index.js":"40","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\index.js":"41","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\taskMan.js":"42","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\PageStyle.js":"43","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\taskManStyle.js":"44","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\light-theme.js":"45","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Task-Management\\taskReducer.js":"46","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Task-Management\\taskAction.js":"47","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\UserGroup\\userGroupReducer.js":"48","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\UserGroup\\userGroupAction.js":"49"},{"size":12493,"mtime":1611039463039,"results":"50","hashOfConfig":"51"},{"size":446,"mtime":1609827035278,"results":"52","hashOfConfig":"51"},{"size":11120,"mtime":1610967633110,"results":"53","hashOfConfig":"51"},{"size":14663,"mtime":1611141202077,"results":"54","hashOfConfig":"51"},{"size":8796,"mtime":1611140300895,"results":"55","hashOfConfig":"51"},{"size":2228,"mtime":1610942442096,"results":"56","hashOfConfig":"51"},{"size":2102,"mtime":1610943500138,"results":"57","hashOfConfig":"51"},{"size":2057,"mtime":1610353106642,"results":"58","hashOfConfig":"51"},{"size":362,"mtime":1608102818989,"results":"59","hashOfConfig":"51"},{"size":910,"mtime":1610784771500,"results":"60","hashOfConfig":"51"},{"size":657,"mtime":1609754804208,"results":"61","hashOfConfig":"51"},{"size":577,"mtime":1610951988651,"results":"62","hashOfConfig":"51"},{"size":4690,"mtime":1611115140685,"results":"63","hashOfConfig":"51"},{"size":2606,"mtime":1610532903800,"results":"64","hashOfConfig":"51"},{"size":1846,"mtime":1610348047290,"results":"65","hashOfConfig":"51"},{"size":444,"mtime":1609407701149,"results":"66","hashOfConfig":"51"},{"size":74,"mtime":1609749031591,"results":"67","hashOfConfig":"51"},{"size":5420,"mtime":1611026238191,"results":"68","hashOfConfig":"51"},{"size":300,"mtime":1609827218437,"results":"69","hashOfConfig":"51"},{"size":1397,"mtime":1610353810947,"results":"70","hashOfConfig":"51"},{"size":4033,"mtime":1610361313268,"results":"71","hashOfConfig":"51"},{"size":2631,"mtime":1610532805338,"results":"72","hashOfConfig":"51"},{"size":980,"mtime":1610016660407,"results":"73","hashOfConfig":"51"},{"size":646,"mtime":1611134671800,"results":"74","hashOfConfig":"51"},{"size":369,"mtime":1610190633245,"results":"75","hashOfConfig":"51"},{"size":966,"mtime":1610353767053,"results":"76","hashOfConfig":"51"},{"size":2208,"mtime":1610348232472,"results":"77","hashOfConfig":"51"},{"size":625,"mtime":1609397505791,"results":"78","hashOfConfig":"51"},{"size":623,"mtime":1610340434903,"results":"79","hashOfConfig":"51"},{"size":1694,"mtime":1610799230735,"results":"80","hashOfConfig":"51"},{"size":834,"mtime":1609412006459,"results":"81","hashOfConfig":"51"},{"size":1929,"mtime":1610348148139,"results":"82","hashOfConfig":"51"},{"size":27850,"mtime":1611143221743,"results":"83","hashOfConfig":"51"},{"size":3365,"mtime":1610348259305,"results":"84","hashOfConfig":"51"},{"size":835,"mtime":1609410117084,"results":"85","hashOfConfig":"51"},{"size":2732,"mtime":1611141068473,"results":"86","hashOfConfig":"51"},{"size":1291,"mtime":1611127682207,"results":"87","hashOfConfig":"51"},{"size":2845,"mtime":1610537716063,"results":"88","hashOfConfig":"51"},{"size":843,"mtime":1610434249358,"results":"89","hashOfConfig":"51"},{"size":392,"mtime":1610348748661,"results":"90","hashOfConfig":"51"},{"size":134,"mtime":1609303744560,"results":"91","hashOfConfig":"51"},{"size":9630,"mtime":1611205152256,"results":"92","hashOfConfig":"51"},{"size":837,"mtime":1611144589601,"results":"93","hashOfConfig":"51"},{"size":16470,"mtime":1611205134738,"results":"94","hashOfConfig":"51"},{"size":175,"mtime":1609407541194,"results":"95","hashOfConfig":"51"},{"size":630,"mtime":1611202584612,"results":"96","hashOfConfig":"51"},{"size":622,"mtime":1611202423702,"results":"97","hashOfConfig":"51"},{"size":1630,"mtime":1611140256298,"results":"98","hashOfConfig":"51"},{"size":3226,"mtime":1611141076871,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"103"},"bjm6b4",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"103"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"103"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"103"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"135"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"103"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Blog\\blog.js",["211","212"],"import React, { useEffect, useState } from 'react';\r\nimport { MTButton } from '../../component/MTForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BlogStyle } from './blogStyle'\r\nimport { GET, Delete } from '../../../../core/Redux/Blog/postAction';\r\nimport { Card, Button, Form, Input, Upload, message, Select, Tooltip } from 'antd';\r\nimport coverImg from '../../../../core/images/sample_blog-cover.png'\r\nimport Icons from '../../component/Icons/icons';\r\nimport MTModal from '../../component/MTmodel/modal';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\n\r\nexport const Blog = () => {\r\n    const { Meta } = Card;\r\n    const { Option } = Select;\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch()\r\n    let blogs = useSelector(state => state)\r\n    const [delet, setDelete] = useState(false);\r\n    const [create, setCreate] = useState(false);\r\n    const [view, setView] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [index, setToken] = useState(\"\")\r\n    const [fileList, updateFileList] = useState([]);\r\n    const children = [];\r\n\r\n    useEffect(() => {\r\n        dispatch(GET())\r\n    }, [dispatch])\r\n\r\n    const props1 = {\r\n        fileList,\r\n        onChange: info => {\r\n            // info.fileList[1].status = \"success\"\r\n            info.file.status = 'done'\r\n            info.file.response = null\r\n            console.log(info, \"info\")\r\n            if (info.fileList.length === 2) {\r\n                updateFileList(info.fileList.pop(info.fileList[1]));\r\n            }\r\n        },\r\n        showUploadList: {\r\n            showRemoveIcon: true,\r\n            removeIcon: <Icons type=\"close\" />,\r\n        },\r\n    };\r\n    const localFiles = {\r\n        showUploadList: {\r\n            showRemoveIcon: true,\r\n            removeIcon: <Icons type=\"close\" />,\r\n        },\r\n    }\r\n    const onCancel = () => {\r\n        form.resetFields();\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        setDelete(false);\r\n        setView(false);\r\n        setCreate(false)\r\n    }\r\n    const deleteModal = (title, index) => {\r\n        document.body.classList.remove('ReactModal__Body--before-close')\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        setDelete(true);\r\n        setTitle(title)\r\n        setToken(index)\r\n    };\r\n    const deleteEle = () => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        setDelete(false);\r\n        dispatch(Delete(index))\r\n    };\r\n\r\n    const CreatePostModal = () => {\r\n        document.body.classList.remove('ReactModal__Body--before-close')\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        setCreate(true);\r\n    };\r\n\r\n    const createEle = () => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        setCreate(false);\r\n    };\r\n    const ViewPostModal = () => {\r\n        document.body.classList.remove('ReactModal__Body--before-close')\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        setView(true);\r\n    };\r\n\r\n    const viewEle = () => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        setView(false);\r\n    };\r\n    const normFile = (e) => {\r\n        if (Array.isArray(e)) {\r\n            return e;\r\n        }\r\n        return e && e.fileList;\r\n    };\r\n\r\n\r\n\r\n    children.push(<Option></Option>);\r\n    return (\r\n        <BlogStyle>\r\n            <div className=\"mainContent\">\r\n                <div className=\"heading\">\r\n                    <div className=\"title\">Blog</div>\r\n                    <div><MTButton className=\"createEle\" onClick={CreatePostModal}>Create</MTButton></div>\r\n                </div>\r\n                <div className=\"cardcontent\">\r\n                    {blogs.data.blogs === undefined ? null : blogs.data.blogs.map((menu, index) => (\r\n                        <Card key={index} className=\"card\" cover={<img src={coverImg} alt=\"cardimg\" onClick={ViewPostModal} />}>\r\n                            <Meta title={new String(menu.title).length > 32 ? <Tooltip placement=\"bottom\" title={menu.title}>{menu.title}</Tooltip> : menu.title}\r\n                                description={\r\n                                    <span>\r\n                                        {menu.createdTime}<br></br>\r\n                                        <span className=\"user\"><Icons type=\"author\" /></span>\r\n                                        <span className=\"author\"> {menu.author}</span>  {menu.token}\r\n                                        <span className=\"editDel\">\r\n                                            <Tooltip placement=\"bottom\" title=\"edit\">\r\n                                                <span>\r\n                                                    <Icons type=\"post_edit\" />\r\n                                                </span>\r\n                                            </Tooltip>\r\n                                            <Tooltip placement=\"bottom\" title=\"delete\">\r\n                                                <span onClick={() => deleteModal(menu.title, menu.token)}>\r\n                                                    <Icons type=\"post_delete\" />\r\n                                                </span>\r\n                                            </Tooltip>\r\n                                        </span>\r\n                                    </span>\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    ))}\r\n                    {/* delete Post */}\r\n                    <MTModal\r\n                        visible={delet}\r\n                        title=\"Delete Post\"\r\n                        onOk={deleteEle}\r\n                        closable={false}\r\n                        maskClosable={false}\r\n                        footer={[\r\n                            <Button key=\"submit\" className=\"deleteEle\" onClick={deleteEle}>Delete</Button>,\r\n                            <Button key=\"back\" className=\"cancelEle\" onClick={onCancel}>Cancel</Button>\r\n                        ]}\r\n                    >\r\n                        <p className=\"warning\">Are you sure to delete this post permenently?</p>\r\n                        <Icons type=\"del_postname\" /> <span className=\"title\">{title}</span>\r\n                    </MTModal>\r\n                    {/* View Post */}\r\n                    <MTModal\r\n                        visible={view}\r\n                        title=\"View Post\"\r\n                        className=\"footer\"\r\n                        onOk={viewEle}\r\n                        onCancel={viewEle}\r\n                        closable={true}\r\n                        maskClosable={false}\r\n                        width={850}\r\n                    >\r\n                        <div className=\"viewHeader\">First Sample Post For View</div>\r\n                        <div className=\"viewContent\">\r\n                            <img src={coverImg} alt=\"cardimg\" className=\"viewImg\" />\r\n                            <div>\r\n                                <div className=\"createCont\"><span className=\"sideHeading\"> Created On :</span><br></br><p>02 Auguest 2020, 06:33</p></div>\r\n                                <div className=\"author\"><span className=\"sideHeading\"> Author :</span><br></br><p>Hepin Vagadiya</p></div>\r\n                                <div className=\"author\"><span className=\"sideHeading\"> HashTags :</span><br></br><p>#Tag1, #Reactjs, #usecases, #training, #postoftheday</p></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"postDetail\">\r\n                            This is sample post created for design make sure if conetent is bigger then scroll will be automatic generated<br></br><br></br>\r\n                            This is sample post created for design make sure if conetent is bigger then scroll will be automatic generated\r\n                            This is sample post created for design make sure if conetent is bigger then scroll will be automatic generated\r\n                        </div>\r\n                        <div className=\"author\">\r\n                            <span className=\"sideHeading\"> Attechments :</span><br></br>\r\n                            <div className=\"attech\">attechment1_post123.pdf <DownloadOutlined /></div>\r\n                        </div>\r\n                    </MTModal>\r\n                    {/* Create Post*/}\r\n                    <MTModal\r\n                        visible={create}\r\n                        title=\"New Post\"\r\n                        onOk={form.submit}\r\n                        onCancel={onCancel}\r\n                        closable={true}\r\n                        maskClosable={false}\r\n                        footer={[\r\n                            <Button key=\"submit\" form=\"create\" className=\"deleteEle\" htmlType=\"submit\">Save</Button>,\r\n                        ]}\r\n                    >\r\n                        <div className=\"newPostContent\">\r\n                            <Form form={form} layout=\"inline\" onFinish={createEle} id=\"create\">\r\n                                <div className=\"inputs\">\r\n                                    <div className=\"label\">Post Title</div>\r\n                                    <Form.Item name={['user', 'name']} rules={[{ required: true, message: 'Please input Post Title!' }]} >\r\n                                        <Input\r\n                                            name=\"email\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Post Title\"\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className=\"inputs\">\r\n                                    <div className=\"label\">Post Cover Image </div>\r\n                                    <Form.Item\r\n                                        name=\"upload\"\r\n                                        valuePropName=\"fileList\"\r\n                                        getValueFromEvent={normFile}\r\n                                        rules={[{ required: true, message: 'Please Attech PNG file!' }]}\r\n                                    >\r\n                                        <Upload  accept='.png' {...props1}  className=\"upload-list-inline\">\r\n                                            <MTButton className=\"select\">Select</MTButton>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className=\"inputs\">\r\n                                    <div className=\"label\">Post Content</div>\r\n                                    <Form.Item >\r\n                                        <Input.TextArea\r\n                                            placeholder=\"Enter Post Content\"\r\n                                            style={{ maxHeight: \"130px\" }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className=\"inputs\">\r\n                                    <div className=\"label\">Attechments</div>\r\n                                    <Form.Item name=\"upload-local\" rules={[{ required: true, message: 'Please Attech any file !' }]} >\r\n                                        <Upload {...localFiles} className=\"upload-list-inline local\">\r\n                                            <MTButton className=\"select\">Select</MTButton>\r\n                                        </Upload>\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className=\"inputs\">\r\n                                    <div className=\"label\">Hashtags</div>\r\n                                    <Form.Item name=\"select\" rules={[{ required: true, message: 'Please Select Any Option!' }]} >\r\n                                        <Select mode=\"tags\" style={{ width: '100%' }} placeholder=\"Enter Tags\">\r\n                                            {children}\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    </MTModal>\r\n                </div>\r\n            </div>\r\n        </BlogStyle >\r\n    )\r\n}\r\n\r\nexport default Blog;",["213","214"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTmodel\\modal.js",[],["215","216"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\global.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\User\\user.js",["217"],"import React, { useEffect, useState } from 'react';\r\nimport { MTButton } from '../../component/MTForm';\r\nimport { UserStyle } from './userStyle'\r\nimport { Table } from 'antd';\r\nimport MTModal from '../../component/MTmodel/modal';\r\nimport { Button, Form, Input, Radio, } from 'antd';\r\nimport { Select } from 'antd';\r\nimport { UserData, Registration, DeleteUser, FindUser, Update } from '../../../../core/Redux/User/userAction';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Icons from '../../../modules/component/Icons/icons'\r\n\r\nexport const User = () => {\r\n    const [form] = Form.useForm();\r\n    const { Option } = Select;\r\n\r\n    const dispatch = useDispatch()\r\n    const user = useSelector(state => state)\r\n    const [newUser, setNewUser] = useState(false);\r\n    const [editUser, setEditUser] = useState(false);\r\n    const [contact, setContact] = useState();\r\n    const [delet, setDelete] = useState(false);\r\n    const [title, setTitle] = useState(\"\");\r\n    const [index, setToken] = useState(\"\")\r\n    const [editToken, setEdittoken] = useState(\"\")\r\n    const [loading, setLoading] = useState(false);\r\n    const [select, selectIndex] = useState(\"\")\r\n    const validateMessages = {\r\n        required: 'Email is required!',\r\n        types: { email: 'Email is not a valid email!', },\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(UserData())\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (user.table.status === true) {\r\n            setNewUser(false)\r\n            setLoading(false)\r\n            form.resetFields();\r\n        }\r\n        if (user.table.editStatus === true) { form.resetFields(); setLoading(false); setEditUser(false) }\r\n        if (user.table.findUser) {\r\n            setEdittoken(user.table.findUser.data[0].token)\r\n            form.setFieldsValue(user.table.findUser.data[0]);\r\n            if (user.table.findUser.status === true) { setEditUser(true) }\r\n        }\r\n    }, [user.table.status, user.table.findUser, user.table.editStatus])\r\n\r\n    const columns = [\r\n        {\r\n            \"title\": \"User Name\",\r\n            render: listUsers => `${listUsers.firstName} ${listUsers.lastName}`,\r\n            \"key\": \"firstName\",\r\n            \"width\": '20%',\r\n            \"ellipsis\": true,\r\n            sorter: (a, b) => a.firstName.length - b.firstName.length,\r\n        },\r\n        {\r\n            \"title\": \"Email\",\r\n            \"dataIndex\": \"email\",\r\n            \"key\": \"email\",\r\n            \"width\": '20%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Contect\",\r\n            \"dataIndex\": \"contact\",\r\n            \"key\": \"contact\",\r\n            \"width\": '15%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Designation\",\r\n            \"dataIndex\": \"designation\",\r\n            \"key\": \"designation\",\r\n            \"width\": '15%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Created Time\",\r\n            \"dataIndex\": \"createdTime\",\r\n            \"key\": \"createdTime\",\r\n            \"width\": '20%',\r\n            \"ellipsis\": true,\r\n        },\r\n        {\r\n            \"title\": \"Action\",\r\n            \"dataIndex\": \"action\",\r\n            \"key\": \"action\",\r\n            \"ellipsis\": true,\r\n            render: (text, record, index) => (\r\n                <span>\r\n                    <span onClick={() => selectRow(record.token, index)}>\r\n                        <Icons type=\"post_edit\" />\r\n                    </span>\r\n                    <span onClick={() => deleteTableRow(record.token, record.firstName + \" \" + record.lastName)}>\r\n                        <Icons type=\"post_delete\" />\r\n                    </span>\r\n                </span>\r\n            ),\r\n        },\r\n    ];\r\n    const CreateModal = (e) => {\r\n        e.preventDefault();\r\n        document.body.classList.remove('ReactModal__Body--before-close')\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        setNewUser(true)\r\n    }\r\n    const createUser = (value) => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        dispatch(Registration(value))\r\n        setLoading(true);\r\n    }\r\n    const deleteTableRow = (record, title) => {\r\n        document.body.classList.add('ReactModal__Body--open')\r\n        setDelete(true);\r\n        setTitle(title);\r\n        setToken(record);\r\n    }\r\n    const deleteOk = () => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        dispatch(DeleteUser(index))\r\n        setDelete(false);\r\n    }\r\n    const selectRow = (record, token) => {\r\n        dispatch(FindUser(record))\r\n        selectIndex(token);\r\n    }\r\n    const editUserModal = (value) => {\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        dispatch(Update(value, editToken, select))\r\n        setLoading(true);\r\n    }\r\n    const onCancel = () => {\r\n        form.resetFields();\r\n        document.body.classList.add('ReactModal__Body--before-close')\r\n        setNewUser(false);\r\n        setDelete(false);\r\n        setLoading(false);\r\n        setEditUser(false)\r\n    }\r\n\r\n    const checkMobileNo = () => {\r\n        if (contact === \"\") {\r\n            return Promise.reject('Contect is required');\r\n        }\r\n        if (contact < 9999999999) { return Promise.resolve(); }\r\n        return Promise.reject('Please input valid phone no!');\r\n    };\r\n\r\n    return (\r\n        <UserStyle>\r\n            <div className=\"heading\">\r\n                <div className=\"title\">User</div>\r\n                <div><MTButton className=\"createEle\" onClick={CreateModal}>Create</MTButton></div>\r\n            </div>\r\n            {/* Delete Table Raw */}\r\n            <MTModal\r\n                visible={delet}\r\n                title=\"Delete Post\"\r\n                onOk={deleteOk}\r\n                closable={false}\r\n                maskClosable={false}\r\n                footer={[\r\n                    <Button key=\"submit\" className=\"deleteEle\" onClick={deleteOk}>Delete</Button>,\r\n                    <Button key=\"back\" className=\"cancelEle\" onClick={onCancel}>Cancel</Button>\r\n                ]}\r\n            >\r\n                <p className=\"warning\">Are you sure to delete this post permenently?</p>\r\n                <Icons type=\"usersMenu\" /> <span className=\"title\">{title}</span>\r\n            </MTModal>\r\n            {/* Create Table Raw */}\r\n            <MTModal\r\n                visible={editUser === true ? editUser : newUser}\r\n                title={newUser === true ? 'New User' : 'Edit User'}\r\n                onOk={form.submit}\r\n                onCancel={onCancel}\r\n                closable={true}\r\n                maskClosable={false}\r\n                footer={[\r\n                    <Button key=\"submit\" loading={loading} htmlType=\"submit\" form=\"userform\" className=\"deleteEle\">Save</Button>,\r\n                ]}\r\n            >\r\n                <Form layout=\"inline\" validateMessages={validateMessages} id=\"userform\" form={form} onFinish={editUser === true ? editUserModal : createUser}>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">First Name</div>\r\n                        <Form.Item name=\"firstName\" rules={[{ required: true, message: 'Please input First Name!' }]} >\r\n                            <Input\r\n                                name=\"firstname\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter First Name\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Last Name</div>\r\n                        <Form.Item name=\"lastName\" rules={[{ required: true, message: 'Please input Last Name!' }]} >\r\n                            <Input\r\n                                name=\"lastname\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Last Name\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Email</div>\r\n                        <Form.Item name=\"email\" rules={[{ type: 'email', required: true }]}>\r\n                            <Input\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Email Address\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\" style={{ padding: \"6px 10px 0px 13px\" }}>\r\n                        <div className=\"label\">Username</div>\r\n                        <Form.Item name=\"username\" rules={[{ required: true, message: 'Please input Username!' }]} >\r\n                            <Input\r\n                                name=\"username\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter User Name\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Contect No.</div>\r\n                        <Form.Item name=\"contact\" rules={[{ validator: checkMobileNo, required: true }]}>\r\n                            <Input\r\n                                name=\"number\"\r\n                                type=\"number\"\r\n                                placeholder=\"Enter Contect No\"\r\n                                onChange={e => setContact(e.target.value)}\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Designation</div>\r\n                        <Form.Item name=\"designation\" rules={[{ required: true, message: 'Please Select Any Option!' }]} >\r\n                            <Select placeholder=\"Select designation\">\r\n                                <Option value=\"Graphic Designer\">Graphic Designer</Option>\r\n                                <Option value=\"Web Devloper\">Web Devloper</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Blood Group</div>\r\n                        <Form.Item name=\"bloodGroup\" rules={[{ required: true, message: 'Please Select Any Option!' }]}>\r\n                            <Select placeholder=\"Select bloodgroup\">\r\n                                <Option value=\"A\">A</Option>\r\n                                <Option value=\"A+\">A+</Option>\r\n                                <Option value=\"AB\">AB</Option>\r\n                            </Select>\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\" style={{ padding: \"6px 10px 0px 13px\" }}>\r\n                        <div className=\"label\">Gender</div>\r\n                        <Form.Item name=\"gender\" rules={[{ required: true, message: 'Please pick an item!' }]} >\r\n                            <Radio.Group>\r\n                                <Radio value=\"Male\" style={{ padding: \"5px\" }}>Male</Radio>\r\n                                <Radio value=\"female\" style={{ padding: \"5px\" }}>female</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n                    </div>\r\n\r\n                    <div className=\"inputs\" style={{ padding: \"6px 0px 0px 9px\" }}>\r\n                        <div className=\"label\">Address<sup>*</sup></div>\r\n                        <Form.Item name=\"address\" rules={[{ required: true, message: 'Please input your Address!' }]}                        >\r\n                            <Input placeholder=\"Address\" />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Password<sup>*</sup></div>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            hasFeedback\r\n                            rules={[{\r\n                                required: true,\r\n                                message: 'Please input your password!'\r\n                            }]}\r\n                        >\r\n                            <Input.Password\r\n                                className=\"username\"\r\n                                placeholder=\"password\"\r\n                                type=\"password\"\r\n                                name=\"newpassword\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                    <div className=\"inputs-inline\">\r\n                        <div className=\"label\">Confirm Password<sup>*</sup></div>\r\n                        <Form.Item\r\n                            name=\"confirmPassword\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please confirm your password!',\r\n                                },\r\n                                ({ getFieldValue }) => ({\r\n                                    validator(_, value) {\r\n                                        if (!value || getFieldValue('password') === value) {\r\n                                            return Promise.resolve();\r\n                                        }\r\n                                        return Promise.reject('The passwords are not match!');\r\n                                    },\r\n                                }),\r\n                            ]}\r\n                        >\r\n                            <Input.Password\r\n                                placeholder=\"confirm password\"\r\n                                className=\"username\"\r\n                                type=\"password\"\r\n                                name=\"confirmpassword\"\r\n                            />\r\n                        </Form.Item>\r\n                    </div>\r\n                </Form>\r\n            </MTModal>\r\n            <div className=\"tableContent\">\r\n                <Table\r\n                    sticky\r\n                    pagination={{ pageSize: 12 }}\r\n                    columns={columns}\r\n                    dataSource={user.table.table}\r\n                    scroll={{ y: 'calc(77.5vh - 4em)' }}\r\n                />\r\n            </div>\r\n        </UserStyle >\r\n    );\r\n}\r\n\r\nexport default User;","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\UserGroup\\userGroup.js",["218"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\UserGroup\\userGroStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\User\\userStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Array\\array.js",[],["219","220"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\reportWebVitals.js",[],["221","222"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\store.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\authRouter.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\dark-theme.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\signin.js",["223"],"import React, { useState } from 'react';\r\nimport SignInWrapper from './SigninStyle';\r\nimport Logo from '../../../../core/images/logo.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MTButton } from '../../component/MTForm';\r\nimport { Form, Input, message } from 'antd';\r\nimport { Authentication } from '../../../../core/Redux/auth/authAction';\r\n\r\nexport const SignIn = () => {\r\n    const dispatch = useDispatch()\r\n    let user = useSelector(state => state)\r\n    const [username, setUsername] = React.useState();\r\n    const [password, setPassword] = React.useState();\r\n    const key = 'updatable';\r\n\r\n    React.useEffect(() => {\r\n        dispatch(Authentication())\r\n    }, [dispatch])\r\n\r\n    const submit = () => {\r\n        dispatch(Authentication(username, password))\r\n        message.loading({ content: 'Verifying User...', key });\r\n        setTimeout(() => {\r\n            if (user.auth.auth.status === false) { message.error({ content: user.auth.auth.message, key, duration: 2 }) } else { message.success({ content: user.auth.auth.message, key, duration: 2 }) }\r\n        }, 1000);\r\n    }\r\n    return (\r\n        <SignInWrapper >\r\n            <div className=\"signinContent\">\r\n                <div className=\"leftContainer\">\r\n                    <div className=\"left\">\r\n                        <img className=\"logo\" src={Logo} alt=\"dsff\"></img>\r\n                        <div className=\"logoInformation\">\r\n                            <p>\r\n                                We are Zeronsec, team of passionate security engineers and industry<br></br>\r\n                                    veterans spread across the globe, specializing in niche information security<br></br>\r\n                                    areas. We exist to protect our customers.<br></br>\r\n                                    Our obsession to engineer robust & meaningful solutions drives us forward<br></br>\r\n                                    every day. We are the company where passion meets detailed engineering.\r\n                                </p>\r\n                            <ul>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"rightContainer\">\r\n                    <div className=\"right\">\r\n                        <div className=\"welcome\">Welcome back</div>\r\n                        <div className=\"login\">Login to your account</div>\r\n                        <Form onFinish={submit} >\r\n                            <div className=\"inputs\">\r\n                                <div className=\"label\">UserName<sup>*</sup></div>\r\n                                <Form.Item name=\"username\" rules={[{ required: true, message: 'Please input your Username!' }]} >\r\n                                    <Input\r\n                                        name=\"username\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Username\"\r\n                                        onChange={e => setUsername(e.target.value)}\r\n                                    />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <div className=\"inputs\">\r\n                                <div className=\"label\">Password<sup>*</sup></div>\r\n                                <Form.Item name=\"password\" rules={[{ required: true, message: 'Please input your Password!' }]} >\r\n                                    <Input.Password\r\n                                        className=\"username\"\r\n                                        name=\"password\"\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                        onChange={e => setPassword(e.target.value)}\r\n                                    />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Link to={'/ForgetPassword'} >\r\n                                <div className=\"forgetpw\">Forgot password?</div>\r\n                            </Link>\r\n                            {/* {submitErr === true && <span style={{ fontSize: \"12px\", color: \"rgb(255 0 0)\" }}>{user.auth.auth.message}</span>} */}\r\n                            <div className=\"submitContent\">\r\n                                <MTButton className=\"submit\" htmlType=\"submit\">Login now</MTButton>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </SignInWrapper>\r\n    );\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\OTP\\otp.js",[],["224","225"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Forgetpassword\\forgetpwStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Header\\headerStyle.js",[],["226","227"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTForm\\index.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Blog\\blogStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\MTForm\\MTbutton\\button.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Sidebar\\sidebar.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Newpassword\\newpass.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Forgetpassword\\forgetpass.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Sidebar\\sidebarStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\App.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Blog\\postsReducer.js",["228","229","230"],"const initState = {\r\n    blogs: [],\r\n};\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_CARD_DATA':\r\n            state = {\r\n                blogs: action.payload,\r\n            }\r\n        case 'DELETE_POST_DATA':\r\n            state = {\r\n                blogs: action.payload,\r\n            }\r\n    }\r\n    return state;\r\n};  ","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\Layout\\Header\\header.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\Newpassword\\newpwStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Chat_Room\\chatRoom.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Blog\\postAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\page.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\pageRouter.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\OTP\\OtpStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\component\\Icons\\icons.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\auth\\Signin\\SigninStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Chat_Room\\chatRoomStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\User\\userAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\User\\userReducer.js",["231","232"],"const initState = {\r\n    table: [],\r\n};\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_USER_DATA':\r\n            return (\r\n                state = {\r\n                    table: action.payload.data,\r\n                }\r\n            )\r\n        case 'USER_REGISTRATION':\r\n            return (\r\n                state = {\r\n                    table: [...state.table, action.payload.data],\r\n                    status: action.payload.status,\r\n                }\r\n            )\r\n        case 'DELETE_USER':\r\n            return (\r\n                state = {\r\n                    table: action.payload\r\n                }\r\n            )\r\n        case 'FIND_USER_DATA':\r\n            return (\r\n                state = {\r\n                    table: [...state.table],\r\n                    findUser: action.payload.data,\r\n                    findStatus: action.payload.status\r\n                }\r\n            )\r\n        case 'USER_UPDATE':\r\n            const maintable = [...state.table].slice();\r\n            maintable[action.index] = action.payload.data\r\n            return (\r\n                state = {\r\n                    table: maintable,\r\n                    editStatus: action.payload.status,\r\n                }\r\n            )\r\n    }\r\n    return state\r\n};","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\auth\\authAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\auth\\authReducer.js",["233","234"],"const initState = {\r\n    auth: [],\r\n    email: [],\r\n    otp: [],\r\n    changePassword: [],\r\n};\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'FOUND_USER':\r\n            return (\r\n                state = {\r\n                    auth: action.payload,\r\n                }\r\n            );\r\n        case 'FORGET_PASSWORD':\r\n            return (\r\n                state = {\r\n                    email: action.payload,\r\n                }\r\n            );\r\n        case 'REQUEST_OTP':\r\n            return (\r\n                state = {\r\n                    otp: action.payload,\r\n                }\r\n            );\r\n        case 'CHANGE_PASSWORD':\r\n            return (\r\n                state = {\r\n                    changePassword: action.payload,\r\n                }\r\n            );\r\n    }\r\n    return state;\r\n};  ","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\index.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\index.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\taskMan.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\PageStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\Component\\modules\\Pages\\Task_Manager\\taskManStyle.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\setting\\light-theme.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Task-Management\\taskReducer.js",["235","236","237"],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\Task-Management\\taskAction.js",[],"C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\UserGroup\\userGroupReducer.js",["238","239"],"const initState = {\r\n    groupTable: [],\r\n};\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_USER_GROUP_DATA':\r\n            return (\r\n                state = {\r\n                    groupTable: action.payload.data,\r\n                }\r\n            )\r\n            case 'FIND_USERS_DATA':\r\n                return (\r\n                    state = {\r\n                        groupTable: [...state.groupTable],\r\n                        getAllUser: action.payload.data,\r\n                    }\r\n                )\r\n        case 'USER_GROUP_REGISTRATION':\r\n            return (\r\n                state = {\r\n                    groupTable: [...state.groupTable, action.payload.data],\r\n                    status: action.payload.status,\r\n                }\r\n            )\r\n        case 'DELETE_USER_GROUP':\r\n            return (\r\n                state = {\r\n                    groupTable: action.payload\r\n                }\r\n            )\r\n        case 'FIND_USERGROUP_DATA':\r\n            return (\r\n                state = {\r\n                    groupTable: [...state.groupTable],\r\n                    findStatus: action.payload.data.status,\r\n                    findUserGroup: action.payload.data,\r\n                }\r\n            )\r\n        case 'USER_GROUP_UPDATE':\r\n            const maintable = [...state.groupTable].slice();\r\n            maintable[action.index] = action.payload.data\r\n            return (\r\n                state = {\r\n                    groupTable: maintable,\r\n                    editStatus: action.payload.status,\r\n                }\r\n            )\r\n    }\r\n    return state\r\n};","C:\\Users\\zeronsec\\Desktop\\Hepin\\REACT\\management-tool\\src\\core\\Redux\\UserGroup\\userGroupAction.js",[],{"ruleId":"240","severity":1,"message":"241","line":6,"column":45,"nodeType":"242","messageId":"243","endLine":6,"endColumn":52},{"ruleId":"244","severity":1,"message":"245","line":112,"column":42,"nodeType":"246","messageId":"247","endLine":112,"endColumn":64},{"ruleId":"248","replacedBy":"249"},{"ruleId":"250","replacedBy":"251"},{"ruleId":"248","replacedBy":"252"},{"ruleId":"250","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":48,"column":8,"nodeType":"256","endLine":48,"endColumn":71,"suggestions":"257"},{"ruleId":"254","severity":1,"message":"258","line":43,"column":8,"nodeType":"256","endLine":43,"endColumn":91,"suggestions":"259"},{"ruleId":"248","replacedBy":"260"},{"ruleId":"250","replacedBy":"261"},{"ruleId":"248","replacedBy":"262"},{"ruleId":"250","replacedBy":"263"},{"ruleId":"240","severity":1,"message":"264","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"248","replacedBy":"265"},{"ruleId":"250","replacedBy":"266"},{"ruleId":"248","replacedBy":"267"},{"ruleId":"250","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":4,"column":1,"nodeType":"271","endLine":16,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":5,"column":5,"nodeType":"274","messageId":"275","endLine":14,"endColumn":6},{"ruleId":"276","severity":1,"message":"277","line":10,"column":9,"nodeType":"278","messageId":"279","endLine":13,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":4,"column":1,"nodeType":"271","endLine":45,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":5,"column":5,"nodeType":"274","messageId":"275","endLine":43,"endColumn":6},{"ruleId":"269","severity":1,"message":"270","line":7,"column":1,"nodeType":"271","endLine":35,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":8,"column":5,"nodeType":"274","messageId":"275","endLine":33,"endColumn":6},{"ruleId":"269","severity":1,"message":"270","line":4,"column":1,"nodeType":"271","endLine":22,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":5,"column":5,"nodeType":"274","messageId":"275","endLine":20,"endColumn":6},{"ruleId":"276","severity":1,"message":"277","line":10,"column":9,"nodeType":"278","messageId":"279","endLine":14,"endColumn":14},{"ruleId":"269","severity":1,"message":"270","line":4,"column":1,"nodeType":"271","endLine":51,"endColumn":3},{"ruleId":"272","severity":1,"message":"273","line":5,"column":5,"nodeType":"274","messageId":"275","endLine":49,"endColumn":6},"no-unused-vars","'message' is defined but never used.","Identifier","unusedVar","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","no-native-reassign",["280"],"no-negated-in-lhs",["281"],["280"],["281"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.","ArrayExpression",["282"],"React Hook useEffect has missing dependencies: 'form' and 'user.groupTable.findStatus'. Either include them or remove the dependency array.",["283"],["280"],["281"],["280"],["281"],"'useState' is defined but never used.",["280"],["281"],["280"],["281"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},"Update the dependencies array to be: [user.table.status, user.table.findUser, user.table.editStatus, form]",{"range":"288","text":"289"},"Update the dependencies array to be: [user.groupTable.status, user.groupTable.findUserGroup, user.groupTable.editStatus, user.groupTable.findStatus, form]",{"range":"290","text":"291"},[1921,1984],"[user.table.status, user.table.findUser, user.table.editStatus, form]",[1859,1942],"[user.groupTable.status, user.groupTable.findUserGroup, user.groupTable.editStatus, user.groupTable.findStatus, form]"]